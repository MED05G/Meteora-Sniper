import * as grpc from "@grpc/grpc-js";
import { GetAccountBalanceRequest, GetAccountBalanceResponse, GetBlockStreamRequest, GetBlockStreamResponse, GetMarketDepthRequest, GetMarketDepthResponse, GetMarketDepthsRequest, GetMarketDepthsStreamResponse, GetMarketsRequest, GetMarketsResponse, GetOpenOrdersRequest, GetOpenOrdersResponse, GetOrderbookRequest, GetOrderbookResponse, GetOrderbooksRequest, GetOrderbooksStreamResponse, GetOrdersRequest, GetOrdersResponse, GetOrderStatusStreamRequest, GetOrderStatusStreamResponse, GetPoolReservesStreamRequest, GetPoolReservesStreamResponse, GetPoolsRequest, GetPoolsResponse, GetPriceRequest, GetPriceResponse, GetPricesStreamRequest, GetPricesStreamResponse, GetQuotesRequest, GetQuotesResponse, GetQuotesStreamRequest, GetQuotesStreamResponse, GetRecentBlockHashRequest, GetRecentBlockHashResponse, GetServerTimeRequest, GetServerTimeResponse, GetSwapsStreamRequest, GetSwapsStreamResponse, GetTickersRequest, GetTickersResponse, GetTickersStreamResponse, GetTradesRequest, GetTradesResponse, GetTradesStreamResponse, GetUnsettledRequest, GetUnsettledResponse, PostCancelAllRequest, PostCancelAllResponse, PostCancelByClientOrderIDRequest, PostCancelOrderRequest, PostCancelOrderResponse, PostOrderRequest, PostOrderResponse, PostReplaceOrderRequest, PostSettleRequest, PostSettleResponse, PostSubmitBatchRequest, PostSubmitBatchResponse, PostSubmitRequest, PostSubmitResponse, RouteTradeSwapRequest, TradeSwapRequest, TradeSwapResponse, GetOrderbookRequestV2, GetOrderbookResponseV2, GetMarketDepthRequestV2, GetMarketDepthResponseV2, GetMarketsRequestV2, GetMarketsResponseV2, GetTickersRequestV2, GetTickersResponseV2, GetOpenOrdersRequestV2, GetUnsettledRequestV2, PostCancelOrderRequestV2, PostCancelOrderResponseV2, PostSettleRequestV2, PostReplaceOrderRequestV2, GetJupiterPricesRequest, GetJupiterPricesResponse, GetJupiterQuotesRequest, GetJupiterQuotesResponse, GetRaydiumPoolsRequest, GetRaydiumPoolsResponse, GetRaydiumPricesRequest, GetRaydiumPricesResponse, GetRaydiumQuotesRequest, GetRaydiumQuotesResponse, PostJupiterRouteSwapRequest, PostJupiterRouteSwapResponse, PostJupiterSwapRequest, PostJupiterSwapResponse, PostOrderRequestV2, PostRaydiumRouteSwapRequest, PostRaydiumRouteSwapResponse, PostRaydiumSwapRequest, PostRaydiumSwapResponse, GetOpenOrdersResponseV2, GetNewRaydiumPoolsRequest, GetTransactionRequest, GetTransactionResponse, GetRateLimitResponse, GetRateLimitRequest, GetNewRaydiumPoolsResponse, GetPriorityFeeRequest, GetPriorityFeeResponse, PostJupiterSwapInstructionsRequest, PostJupiterSwapInstructionsResponse, GetTickersStreamRequest, GetRaydiumPoolReserveRequest, GetRaydiumPoolReserveResponse, GetBundleTipResponse, GetBundleTipRequest, GetPumpFunNewTokensStreamResponse, GetPumpFunNewTokensStreamRequest, GetPumpFunSwapsStreamResponse, GetPumpFunSwapsStreamRequest, PostPumpFunSwapRequest, PostPumpFunSwapResponse, GetPumpFunQuotesRequest, GetPumpFunQuotesResponse, GetPumpFunAMMSwapStreamRequest, GetPumpFunAMMSwapStreamResponse, GetRecentBlockHashRequestV2, GetRecentBlockHashResponseV2, PostRaydiumCPMMSwapRequest, PostRaydiumCPMMSwapResponse, GetRaydiumCPMMQuotesRequest, GetRaydiumCPMMQuotesResponse, GetRaydiumCLMMPoolsRequest, GetRaydiumCLMMPoolsResponse, GetRaydiumCLMMQuotesRequest, GetRaydiumCLMMQuotesResponse, GetNewRaydiumPoolsByTransactionResponse, GetNewRaydiumPoolsByTransactionRequest, GetPriorityFeeByProgramRequest, GetPriorityFeeByProgramResponse, PostPumpFunSwapRequestSol, PostSubmitSnipeResponse, PostSubmitSnipeRequest, PostSubmitPaladinRequest, GetLeaderScheduleRequest, GetLeaderScheduleResponse, GetPumpFunNewAmmPoolStreamResponse, GetPumpFunNewAmmPoolStreamRequest, GetTokenAccountsRequest, GetTokenAccountsResponse, PostRaydiumSwapInstructionsRequest, PostRaydiumSwapInstructionsResponse } from "../proto/messages/api";
import { BaseProvider } from "./base";
import { RpcReturnType } from "../proto/runtime/rpc";
export declare class GrpcProvider extends BaseProvider {
    private client;
    private grpcClient;
    constructor(authHeader: string, privateKey: string | undefined, address: string | undefined, useTls: boolean, options?: grpc.ClientOptions);
    close: () => void;
    getRateLimit(request: GetRateLimitRequest): RpcReturnType<Promise<GetRateLimitResponse>, []>;
    getTokenAccounts(request: GetTokenAccountsRequest): RpcReturnType<Promise<GetTokenAccountsResponse>, []>;
    getTransaction(request: GetTransactionRequest): RpcReturnType<Promise<GetTransactionResponse>, []>;
    getJupiterPrices(request: GetJupiterPricesRequest): RpcReturnType<Promise<GetJupiterPricesResponse>, []>;
    getJupiterQuotes(request: GetJupiterQuotesRequest): RpcReturnType<Promise<GetJupiterQuotesResponse>, []>;
    postJupiterRouteSwap(request: PostJupiterRouteSwapRequest): RpcReturnType<Promise<PostJupiterRouteSwapResponse>, []>;
    postJupiterSwap(request: PostJupiterSwapRequest): RpcReturnType<Promise<PostJupiterSwapResponse>, []>;
    postJupiterSwapInstructions(request: PostJupiterSwapInstructionsRequest): RpcReturnType<Promise<PostJupiterSwapInstructionsResponse>, []>;
    postRaydiumRouteSwap(request: PostRaydiumRouteSwapRequest): RpcReturnType<Promise<PostRaydiumRouteSwapResponse>, []>;
    postRaydiumCLMMRouteSwap(request: PostRaydiumRouteSwapRequest): RpcReturnType<Promise<PostRaydiumRouteSwapResponse>, []>;
    postRaydiumSwap(request: PostRaydiumSwapRequest): RpcReturnType<Promise<PostRaydiumSwapResponse>, []>;
    postRaydiumSwapInstructions(request: PostRaydiumSwapInstructionsRequest): RpcReturnType<Promise<PostRaydiumSwapInstructionsResponse>, []>;
    postRaydiumCPMMSwap(request: PostRaydiumCPMMSwapRequest): RpcReturnType<Promise<PostRaydiumCPMMSwapResponse>, []>;
    postRaydiumCLMMSwap(request: PostRaydiumSwapRequest): RpcReturnType<Promise<PostRaydiumSwapResponse>, []>;
    getRaydiumPoolReserve(request: GetRaydiumPoolReserveRequest): RpcReturnType<Promise<GetRaydiumPoolReserveResponse>, []>;
    getRaydiumPools(request: GetRaydiumPoolsRequest): RpcReturnType<Promise<GetRaydiumPoolsResponse>, []>;
    getRaydiumCLMMPools(request: GetRaydiumCLMMPoolsRequest): RpcReturnType<Promise<GetRaydiumCLMMPoolsResponse>, []>;
    getRaydiumPrices(request: GetRaydiumPricesRequest): RpcReturnType<Promise<GetRaydiumPricesResponse>, []>;
    getRaydiumQuotes(request: GetRaydiumQuotesRequest): RpcReturnType<Promise<GetRaydiumQuotesResponse>, []>;
    getRaydiumCPMMQuotes(request: GetRaydiumCPMMQuotesRequest): RpcReturnType<Promise<GetRaydiumCPMMQuotesResponse>, []>;
    getRaydiumCLMMQuotes(request: GetRaydiumCLMMQuotesRequest): RpcReturnType<Promise<GetRaydiumCLMMQuotesResponse>, []>;
    getPumpFunQuotes(request: GetPumpFunQuotesRequest): RpcReturnType<Promise<GetPumpFunQuotesResponse>, []>;
    getOrderbookV2: (request: GetOrderbookRequestV2) => Promise<GetOrderbookResponseV2>;
    getMarketDepthV2(request: GetMarketDepthRequestV2): Promise<GetMarketDepthResponseV2>;
    getMarketsV2: (request: GetMarketsRequestV2) => Promise<GetMarketsResponseV2>;
    getTickersV2(request: GetTickersRequestV2): Promise<GetTickersResponseV2>;
    getOpenOrdersV2(request: GetOpenOrdersRequestV2): Promise<GetOpenOrdersResponseV2>;
    getUnsettledV2(request: GetUnsettledRequestV2): Promise<GetUnsettledResponse>;
    postOrderV2(request: PostOrderRequestV2): Promise<PostOrderResponse>;
    postCancelOrderV2(request: PostCancelOrderRequestV2): Promise<PostCancelOrderResponseV2>;
    postSettleV2(request: PostSettleRequestV2): Promise<PostSettleResponse>;
    postReplaceOrderV2(request: PostReplaceOrderRequestV2): Promise<PostOrderResponse>;
    getOrderbook: (request: GetOrderbookRequest) => Promise<GetOrderbookResponse>;
    getMarketDepth(request: GetMarketDepthRequest): Promise<GetMarketDepthResponse>;
    getMarkets: (request: GetMarketsRequest) => Promise<GetMarketsResponse>;
    getTickers(request: GetTickersRequest): Promise<GetTickersResponse>;
    getTrades(request: GetTradesRequest): Promise<GetTradesResponse>;
    getServerTime(request: GetServerTimeRequest): Promise<GetServerTimeResponse>;
    getOpenOrders(request: GetOpenOrdersRequest): Promise<GetOpenOrdersResponse>;
    getUnsettled(request: GetUnsettledRequest): Promise<GetUnsettledResponse>;
    getAccountBalance(request: GetAccountBalanceRequest): Promise<GetAccountBalanceResponse>;
    getAccountBalanceV2(request: GetAccountBalanceRequest): Promise<GetAccountBalanceResponse>;
    postOrder(request: PostOrderRequest): Promise<PostOrderResponse>;
    postSubmit(request: PostSubmitRequest): Promise<PostSubmitResponse>;
    postSubmitSnipe(request: PostSubmitSnipeRequest): Promise<PostSubmitSnipeResponse>;
    postSubmitSnipeV2(request: PostSubmitSnipeRequest): Promise<PostSubmitSnipeResponse>;
    postSubmitPaladinV2(request: PostSubmitPaladinRequest): Promise<PostSubmitResponse>;
    postSubmitBatch(request: PostSubmitBatchRequest): Promise<PostSubmitBatchResponse>;
    postSubmitV2(request: PostSubmitRequest): Promise<PostSubmitResponse>;
    postSubmitBatchV2(request: PostSubmitBatchRequest): Promise<PostSubmitBatchResponse>;
    postCancelOrder(request: PostCancelOrderRequest): Promise<PostCancelOrderResponse>;
    postCancelByClientOrderID(request: PostCancelByClientOrderIDRequest): Promise<PostCancelOrderResponse>;
    postCancelAll(request: PostCancelAllRequest): Promise<PostCancelAllResponse>;
    postSettle(request: PostSettleRequest): Promise<PostSettleResponse>;
    postReplaceByClientOrderID(request: PostOrderRequest): Promise<PostOrderResponse>;
    postReplaceOrder(request: PostReplaceOrderRequest): Promise<PostOrderResponse>;
    getPrice(request: GetPriceRequest): Promise<GetPriceResponse>;
    getPricesStream(request: GetPricesStreamRequest): Promise<AsyncGenerator<GetPricesStreamResponse>>;
    getRecentBlockHash(request: GetRecentBlockHashRequest): Promise<GetRecentBlockHashResponse>;
    getRecentBlockHashV2(request: GetRecentBlockHashRequestV2): Promise<GetRecentBlockHashResponseV2>;
    getPools(request: GetPoolsRequest): Promise<GetPoolsResponse>;
    getQuotes(request: GetQuotesRequest): Promise<GetQuotesResponse>;
    postTradeSwap(request: TradeSwapRequest): Promise<TradeSwapResponse>;
    postPumpFunSwap(request: PostPumpFunSwapRequest): Promise<PostPumpFunSwapResponse>;
    postPumpFunSwapSol(request: PostPumpFunSwapRequestSol): Promise<PostPumpFunSwapResponse>;
    postRouteTradeSwap(request: RouteTradeSwapRequest): Promise<TradeSwapResponse>;
    getOrders(request: GetOrdersRequest): Promise<GetOrdersResponse>;
    getPriorityFee(request: GetPriorityFeeRequest): Promise<GetPriorityFeeResponse>;
    getPriorityFeeByProgram(request: GetPriorityFeeByProgramRequest): Promise<GetPriorityFeeByProgramResponse>;
    getLeaderSchedule(request: GetLeaderScheduleRequest): Promise<GetLeaderScheduleResponse>;
    getPriorityFeeByProgramStream(request: GetPriorityFeeByProgramRequest): Promise<AsyncGenerator<GetPriorityFeeByProgramResponse>>;
    getOrderbooksStream: (request: GetOrderbooksRequest) => Promise<AsyncGenerator<GetOrderbooksStreamResponse>>;
    getPumpFunNewTokensStream: (request: GetPumpFunNewTokensStreamRequest) => Promise<AsyncGenerator<GetPumpFunNewTokensStreamResponse>>;
    getPumpFunNewAmmPoolStream: (request: GetPumpFunNewAmmPoolStreamRequest) => Promise<AsyncGenerator<GetPumpFunNewAmmPoolStreamResponse>>;
    getPumpFunSwapsStream: (request: GetPumpFunSwapsStreamRequest) => Promise<AsyncGenerator<GetPumpFunSwapsStreamResponse>>;
    getPumpFunAMMSwapStream: (request: GetPumpFunAMMSwapStreamRequest) => Promise<AsyncGenerator<GetPumpFunAMMSwapStreamResponse>>;
    getMarketDepthsStream: (request: GetMarketDepthsRequest) => Promise<AsyncGenerator<GetMarketDepthsStreamResponse>>;
    getTickersStream(request: GetTickersStreamRequest): Promise<AsyncGenerator<GetTickersStreamResponse>>;
    getTradesStream(request: GetTradesRequest): Promise<AsyncGenerator<GetTradesStreamResponse>>;
    getOrderStatusStream(request: GetOrderStatusStreamRequest): Promise<AsyncGenerator<GetOrderStatusStreamResponse>>;
    getPoolReservesStream(request: GetPoolReservesStreamRequest): Promise<AsyncGenerator<GetPoolReservesStreamResponse>>;
    getQuotesStream(request: GetQuotesStreamRequest): Promise<AsyncGenerator<GetQuotesStreamResponse>>;
    getRecentBlockHashStream(request: GetRecentBlockHashRequest): Promise<AsyncGenerator<GetRecentBlockHashResponse>>;
    getSwapsStream(request: GetSwapsStreamRequest): Promise<AsyncGenerator<GetSwapsStreamResponse>>;
    getBlockStream(request: GetBlockStreamRequest): Promise<AsyncGenerator<GetBlockStreamResponse>>;
    getNewRaydiumPoolsStream(request: GetNewRaydiumPoolsRequest): Promise<AsyncGenerator<GetNewRaydiumPoolsResponse>>;
    getNewRaydiumPoolsByTransactionStream(request: GetNewRaydiumPoolsByTransactionRequest): Promise<AsyncGenerator<GetNewRaydiumPoolsByTransactionResponse>>;
    getPriorityFeeStream(request: GetPriorityFeeRequest): Promise<AsyncGenerator<GetPriorityFeeResponse>>;
    getBundleTipStream(request: GetBundleTipRequest): Promise<AsyncGenerator<GetBundleTipResponse>>;
}
//# sourceMappingURL=grpc.d.ts.map