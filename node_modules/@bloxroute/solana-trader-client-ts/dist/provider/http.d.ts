import { GetAccountBalanceRequest, GetAccountBalanceResponse, GetMarketsRequest, GetMarketsResponse, GetOpenOrdersRequest, GetOpenOrdersResponse, GetOrderbookRequest, GetOrderbookResponse, GetPoolsRequest, GetPoolsResponse, GetPriceRequest, GetPriceResponse, GetQuotesRequest, GetQuotesResponse, GetRecentBlockHashRequest, GetRecentBlockHashResponse, GetServerTimeRequest, GetServerTimeResponse, GetTickersRequest, GetTickersResponse, GetTradesRequest, GetTradesResponse, GetUnsettledRequest, GetUnsettledResponse, PostCancelAllRequest, PostCancelAllResponse, PostCancelByClientOrderIDRequest, PostCancelOrderRequest, PostCancelOrderResponse, PostOrderRequest, PostOrderResponse, PostReplaceOrderRequest, PostSettleRequest, PostSettleResponse, PostSubmitBatchRequest, PostSubmitBatchResponse, PostSubmitRequest, PostSubmitResponse, RouteTradeSwapRequest, TradeSwapRequest, TradeSwapResponse, GetMarketDepthRequest, GetMarketDepthResponse, GetMarketDepthRequestV2, GetMarketDepthResponseV2, GetMarketsRequestV2, GetMarketsResponseV2, GetOpenOrdersRequestV2, GetOrderbookRequestV2, GetOrderbookResponseV2, GetTickersRequestV2, GetTickersResponseV2, GetUnsettledRequestV2, PostCancelOrderRequestV2, PostCancelOrderResponseV2, PostOrderRequestV2, PostReplaceOrderRequestV2, PostSettleRequestV2, GetJupiterPricesRequest, GetJupiterPricesResponse, GetJupiterQuotesRequest, GetJupiterQuotesResponse, PostJupiterRouteSwapRequest, PostJupiterRouteSwapResponse, PostJupiterSwapRequest, PostJupiterSwapResponse, PostRaydiumRouteSwapRequest, PostRaydiumRouteSwapResponse, PostRaydiumSwapRequest, PostRaydiumSwapResponse, GetRaydiumPoolsRequest, GetRaydiumPoolsResponse, GetRaydiumPricesRequest, GetRaydiumPricesResponse, GetRaydiumQuotesRequest, GetRaydiumQuotesResponse, GetOpenOrdersResponseV2, GetTransactionRequest, GetTransactionResponse, GetRateLimitRequest, GetRateLimitResponse, GetPriorityFeeRequest, GetPriorityFeeResponse, PostJupiterSwapInstructionsRequest, PostJupiterSwapInstructionsResponse, GetRaydiumPoolReserveRequest, GetRaydiumPoolReserveResponse, PostRaydiumSwapInstructionsRequest, PostRaydiumSwapInstructionsResponse, PostPumpFunSwapRequest, PostPumpFunSwapResponse, GetPumpFunQuotesRequest, GetPumpFunQuotesResponse, GetRecentBlockHashRequestV2, GetRecentBlockHashResponseV2, PostRaydiumCPMMSwapRequest, PostRaydiumCPMMSwapResponse, GetRaydiumCPMMQuotesRequest, GetRaydiumCPMMQuotesResponse, GetRaydiumCLMMPoolsRequest, GetRaydiumCLMMPoolsResponse, GetRaydiumCLMMQuotesRequest, GetRaydiumCLMMQuotesResponse, GetPriorityFeeByProgramRequest, GetPriorityFeeByProgramResponse, PostPumpFunSwapRequestSol, PostSubmitSnipeRequest, PostSubmitSnipeResponse, PostSubmitPaladinRequest, GetLeaderScheduleRequest, GetLeaderScheduleResponse, GetTokenAccountsRequest, GetTokenAccountsResponse } from "../proto/messages/api";
import { BaseProvider } from "./base";
import { AxiosRequestConfig, AxiosResponse } from "axios";
import { RpcReturnType } from "../proto/runtime/rpc";
export declare class HttpProvider extends BaseProvider {
    private readonly baseUrl;
    private readonly baseUrlV2;
    requestConfig: AxiosRequestConfig;
    private readonly timestampedRequests;
    constructor(authHeader: string, privateKey?: string, address?: string, requestConfig?: AxiosRequestConfig);
    close: () => void;
    getRateLimit(request: GetRateLimitRequest): RpcReturnType<Promise<GetRateLimitResponse>, []>;
    getTransaction(request: GetTransactionRequest): RpcReturnType<Promise<GetTransactionResponse>, []>;
    getTokenAccounts(request: GetTokenAccountsRequest): RpcReturnType<Promise<GetTokenAccountsResponse>, []>;
    getJupiterPrices(request: GetJupiterPricesRequest): RpcReturnType<Promise<GetJupiterPricesResponse>, []>;
    getJupiterQuotes(request: GetJupiterQuotesRequest): RpcReturnType<Promise<GetJupiterQuotesResponse>, []>;
    postJupiterRouteSwap(request: PostJupiterRouteSwapRequest): RpcReturnType<Promise<PostJupiterRouteSwapResponse>, []>;
    postJupiterSwap(request: PostJupiterSwapRequest): RpcReturnType<Promise<PostJupiterSwapResponse>, []>;
    postJupiterSwapInstructions(request: PostJupiterSwapInstructionsRequest): RpcReturnType<Promise<PostJupiterSwapInstructionsResponse>, []>;
    postRaydiumRouteSwap(request: PostRaydiumRouteSwapRequest): RpcReturnType<Promise<PostRaydiumRouteSwapResponse>, []>;
    postRaydiumRouteSwapInstructions(request: PostRaydiumSwapInstructionsRequest): RpcReturnType<Promise<PostRaydiumSwapInstructionsResponse>, []>;
    postRaydiumCLMMRouteSwap(request: PostRaydiumRouteSwapRequest): RpcReturnType<Promise<PostRaydiumRouteSwapResponse>, []>;
    postRaydiumSwap(request: PostRaydiumSwapRequest): RpcReturnType<Promise<PostRaydiumSwapResponse>, []>;
    postRaydiumCPMMSwap(request: PostRaydiumCPMMSwapRequest): RpcReturnType<Promise<PostRaydiumCPMMSwapResponse>, []>;
    postRaydiumCLMMSwap(request: PostRaydiumSwapRequest): RpcReturnType<Promise<PostRaydiumSwapResponse>, []>;
    getRaydiumPoolReserve(request: GetRaydiumPoolReserveRequest): RpcReturnType<Promise<GetRaydiumPoolReserveResponse>, []>;
    getRaydiumPools(request: GetRaydiumPoolsRequest): RpcReturnType<Promise<GetRaydiumPoolsResponse>, []>;
    getRaydiumPrices(request: GetRaydiumPricesRequest): RpcReturnType<Promise<GetRaydiumPricesResponse>, []>;
    getRaydiumQuotes(request: GetRaydiumQuotesRequest): RpcReturnType<Promise<GetRaydiumQuotesResponse>, []>;
    getRaydiumCPMMQuotes(request: GetRaydiumCPMMQuotesRequest): RpcReturnType<Promise<GetRaydiumCPMMQuotesResponse>, []>;
    getRaydiumCLMMQuotes(request: GetRaydiumCLMMQuotesRequest): RpcReturnType<Promise<GetRaydiumCLMMQuotesResponse>, []>;
    getPumpFunQuotes(request: GetPumpFunQuotesRequest): RpcReturnType<Promise<GetPumpFunQuotesResponse>, []>;
    getOrderbookV2: (request: GetOrderbookRequestV2) => Promise<GetOrderbookResponseV2>;
    getMarketDepthV2(request: GetMarketDepthRequestV2): Promise<GetMarketDepthResponseV2>;
    getMarketsV2(request: GetMarketsRequestV2): Promise<GetMarketsResponseV2>;
    getTickersV2(request: GetTickersRequestV2): Promise<GetTickersResponseV2>;
    getOpenOrdersV2(request: GetOpenOrdersRequestV2): Promise<GetOpenOrdersResponseV2>;
    getUnsettledV2(request: GetUnsettledRequestV2): Promise<GetUnsettledResponse>;
    postOrderV2(request: PostOrderRequestV2): Promise<PostOrderResponse>;
    postCancelOrderV2(request: PostCancelOrderRequestV2): Promise<PostCancelOrderResponseV2>;
    postSettleV2(request: PostSettleRequestV2): Promise<PostSettleResponse>;
    postReplaceOrderV2(request: PostReplaceOrderRequestV2): Promise<PostOrderResponse>;
    getOrderbook: (request: GetOrderbookRequest) => Promise<GetOrderbookResponse>;
    getMarketDepth(request: GetMarketDepthRequest): Promise<GetMarketDepthResponse>;
    getMarkets(request: GetMarketsRequest): Promise<GetMarketsResponse>;
    getTickers(request: GetTickersRequest): Promise<GetTickersResponse>;
    getTrades(request: GetTradesRequest): Promise<GetTradesResponse>;
    getServerTime(request: GetServerTimeRequest): Promise<GetServerTimeResponse>;
    getOpenOrders(request: GetOpenOrdersRequest): Promise<GetOpenOrdersResponse>;
    getUnsettled(request: GetUnsettledRequest): Promise<GetUnsettledResponse>;
    getAccountBalance(request: GetAccountBalanceRequest): Promise<GetAccountBalanceResponse>;
    getAccountBalanceV2(request: GetAccountBalanceRequest): Promise<GetAccountBalanceResponse>;
    getPools(request: GetPoolsRequest): Promise<GetPoolsResponse>;
    getRaydiumCLMMPools(request: GetRaydiumCLMMPoolsRequest): Promise<GetRaydiumCLMMPoolsResponse>;
    getPrice(request: GetPriceRequest): Promise<GetPriceResponse>;
    getRecentBlockHash(request: GetRecentBlockHashRequest): Promise<GetRecentBlockHashResponse>;
    getRecentBlockHashV2(request: GetRecentBlockHashRequestV2): Promise<GetRecentBlockHashResponseV2>;
    getQuotes(request: GetQuotesRequest): Promise<GetQuotesResponse>;
    getPriorityFee(request: GetPriorityFeeRequest): Promise<GetPriorityFeeResponse>;
    getPriorityFeeByProgram(request: GetPriorityFeeByProgramRequest): Promise<GetPriorityFeeByProgramResponse>;
    getLeaderSchedule(request: GetLeaderScheduleRequest): Promise<GetLeaderScheduleResponse>;
    postRaydiumSwapInstructions(request: PostRaydiumSwapInstructionsRequest): Promise<PostRaydiumSwapInstructionsResponse>;
    postOrder(request: PostOrderRequest): Promise<PostOrderResponse>;
    postTradeSwap(request: TradeSwapRequest): Promise<TradeSwapResponse>;
    postPumpFunSwap(request: PostPumpFunSwapRequest): Promise<PostPumpFunSwapResponse>;
    postPumpFunSwapSol(request: PostPumpFunSwapRequestSol): Promise<PostPumpFunSwapResponse>;
    postRouteTradeSwap(request: RouteTradeSwapRequest): Promise<TradeSwapResponse>;
    postSubmit(request: PostSubmitRequest): Promise<PostSubmitResponse>;
    postSubmitSnipeV2(request: PostSubmitSnipeRequest): Promise<PostSubmitSnipeResponse>;
    postSubmitPaladinV2(request: PostSubmitPaladinRequest): Promise<PostSubmitResponse>;
    postSubmitBatch(request: PostSubmitBatchRequest): Promise<PostSubmitBatchResponse>;
    postSubmitV2(request: PostSubmitRequest): Promise<PostSubmitResponse>;
    postSubmitBatchV2(request: PostSubmitBatchRequest): Promise<PostSubmitBatchResponse>;
    postCancelOrder(request: PostCancelOrderRequest): Promise<PostCancelOrderResponse>;
    postCancelByClientOrderID(request: PostCancelByClientOrderIDRequest): Promise<PostCancelOrderResponse>;
    postCancelAll(request: PostCancelAllRequest): Promise<PostCancelAllResponse>;
    postSettle(request: PostSettleRequest): Promise<PostSettleResponse>;
    postReplaceByClientOrderID(request: PostOrderRequest): Promise<PostOrderResponse>;
    postReplaceOrder(request: PostReplaceOrderRequest): Promise<PostOrderResponse>;
    private get;
    private post;
    handleError(e: unknown): never;
    handleResponse<T>(response: AxiosResponse): T;
}
//# sourceMappingURL=http.d.ts.map