import { Type as TransactionMetaInnerInstruction } from "./TransactionMetaInnerInstruction";
import { Type as TransactionMetaTokenBalance } from "./TransactionMetaTokenBalance";
export declare namespace $.api {
    interface TransactionMeta {
        err: string;
        errored: boolean;
        fee: string;
        preBalances: string[];
        postBalances: string[];
        innerInstructions: TransactionMetaInnerInstruction[];
        logMessages: string[];
        preTokenBalances: TransactionMetaTokenBalance[];
        postTokenBalances: TransactionMetaTokenBalance[];
    }
}
export declare type Type = $.api.TransactionMeta;
export declare function getDefaultValue(): $.api.TransactionMeta;
export declare function createValue(partialValue: Partial<$.api.TransactionMeta>): $.api.TransactionMeta;
export declare function encodeJson(value: $.api.TransactionMeta): unknown;
export declare function decodeJson(value: any): $.api.TransactionMeta;
export declare function encodeBinary(value: $.api.TransactionMeta): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.api.TransactionMeta;
//# sourceMappingURL=TransactionMeta.d.ts.map