import { Type as TransactionMessageHeader } from "./TransactionMessageHeader";
import { Type as Instruction } from "./Instruction";
export declare namespace $.api {
    interface TransactionMessageZeta {
        header?: TransactionMessageHeader;
        accountKeys: string[];
        recentBlockhash: string;
        instructions: Instruction[];
    }
}
export declare type Type = $.api.TransactionMessageZeta;
export declare function getDefaultValue(): $.api.TransactionMessageZeta;
export declare function createValue(partialValue: Partial<$.api.TransactionMessageZeta>): $.api.TransactionMessageZeta;
export declare function encodeJson(value: $.api.TransactionMessageZeta): unknown;
export declare function decodeJson(value: any): $.api.TransactionMessageZeta;
export declare function encodeBinary(value: $.api.TransactionMessageZeta): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.api.TransactionMessageZeta;
//# sourceMappingURL=TransactionMessageZeta.d.ts.map