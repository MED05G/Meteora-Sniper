import { Type as Context } from "./Context";
import { Type as GetDriftOpenPerpOrdersValue } from "./GetDriftOpenPerpOrdersValue";
export declare namespace $.api {
    interface GetDriftOpenPerpOrdersResponse {
        context?: Context;
        data?: GetDriftOpenPerpOrdersValue;
    }
}
export declare type Type = $.api.GetDriftOpenPerpOrdersResponse;
export declare function getDefaultValue(): $.api.GetDriftOpenPerpOrdersResponse;
export declare function createValue(partialValue: Partial<$.api.GetDriftOpenPerpOrdersResponse>): $.api.GetDriftOpenPerpOrdersResponse;
export declare function encodeJson(value: $.api.GetDriftOpenPerpOrdersResponse): unknown;
export declare function decodeJson(value: any): $.api.GetDriftOpenPerpOrdersResponse;
export declare function encodeBinary(value: $.api.GetDriftOpenPerpOrdersResponse): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.api.GetDriftOpenPerpOrdersResponse;
//# sourceMappingURL=GetDriftOpenPerpOrdersResponse.d.ts.map