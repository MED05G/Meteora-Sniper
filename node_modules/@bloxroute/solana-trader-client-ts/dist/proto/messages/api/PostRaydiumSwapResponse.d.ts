import { Type as TransactionMessage } from "./TransactionMessage";
import { Type as PriceImpactPercentV2 } from "../common/PriceImpactPercentV2";
import { Type as Fee } from "../common/Fee";
export declare namespace $.api {
    interface PostRaydiumSwapResponse {
        transactions: TransactionMessage[];
        outAmount: number;
        outAmountMin: number;
        priceImpact?: PriceImpactPercentV2;
        fees: Fee[];
    }
}
export declare type Type = $.api.PostRaydiumSwapResponse;
export declare function getDefaultValue(): $.api.PostRaydiumSwapResponse;
export declare function createValue(partialValue: Partial<$.api.PostRaydiumSwapResponse>): $.api.PostRaydiumSwapResponse;
export declare function encodeJson(value: $.api.PostRaydiumSwapResponse): unknown;
export declare function decodeJson(value: any): $.api.PostRaydiumSwapResponse;
export declare function encodeBinary(value: $.api.PostRaydiumSwapResponse): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.api.PostRaydiumSwapResponse;
//# sourceMappingURL=PostRaydiumSwapResponse.d.ts.map