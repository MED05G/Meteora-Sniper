import { Type as InstructionRaydium } from "./InstructionRaydium";
import { Type as PriceImpactPercentV2 } from "../common/PriceImpactPercentV2";
import { Type as Fee } from "../common/Fee";
export declare namespace $.api {
    interface PostRaydiumSwapInstructionsResponse {
        instructions: InstructionRaydium[];
        outAmount: number;
        outAmountMin: number;
        priceImpact?: PriceImpactPercentV2;
        fees: Fee[];
    }
}
export declare type Type = $.api.PostRaydiumSwapInstructionsResponse;
export declare function getDefaultValue(): $.api.PostRaydiumSwapInstructionsResponse;
export declare function createValue(partialValue: Partial<$.api.PostRaydiumSwapInstructionsResponse>): $.api.PostRaydiumSwapInstructionsResponse;
export declare function encodeJson(value: $.api.PostRaydiumSwapInstructionsResponse): unknown;
export declare function decodeJson(value: any): $.api.PostRaydiumSwapInstructionsResponse;
export declare function encodeBinary(value: $.api.PostRaydiumSwapInstructionsResponse): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.api.PostRaydiumSwapInstructionsResponse;
//# sourceMappingURL=PostRaydiumSwapInstructionsResponse.d.ts.map