import { Type as PerpContract } from "../common/PerpContract";
export declare namespace $.api {
    interface GetPerpTradesResponse {
        contract: PerpContract;
        indexPrice: number;
        marketIndex: string;
        filler: string;
        fillerReward: number;
        fillRecordID: string;
        baseAssetAmountFilled: number;
        quoteAssetAmountFilled: number;
        takerFee: number;
        makerFee: number;
        referrerReward: number;
        quoteAssetAmountSurplus: number;
        spotFulfillmentMethodFee: number;
        taker: string;
        takerOrderID: string;
        takerOrderDirection: string;
        takerOrderBaseAssetAmount: number;
        takerOrderCumulativeBaseAssetAmountFilled: number;
        takerOrderCumulativeQuoteAssetAmountFilled: number;
        maker: string;
        makerOrderID: string;
        makerOrderDirection: string;
        makerOrderBaseAssetAmount: number;
        makerOrderCumulativeBaseAssetAmountFilled: number;
        makerOrderCumulativeQuoteAssetAmountFilled: number;
    }
}
export declare type Type = $.api.GetPerpTradesResponse;
export declare function getDefaultValue(): $.api.GetPerpTradesResponse;
export declare function createValue(partialValue: Partial<$.api.GetPerpTradesResponse>): $.api.GetPerpTradesResponse;
export declare function encodeJson(value: $.api.GetPerpTradesResponse): unknown;
export declare function decodeJson(value: any): $.api.GetPerpTradesResponse;
export declare function encodeBinary(value: $.api.GetPerpTradesResponse): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.api.GetPerpTradesResponse;
//# sourceMappingURL=GetPerpTradesResponse.d.ts.map