import { Type as Project } from "./Project";
import { Type as TransactionMessage } from "./TransactionMessage";
import { Type as PriceImpactPercent } from "../common/PriceImpactPercent";
import { Type as Fee } from "../common/Fee";
export declare namespace $.api {
    interface TradeSwapResponse {
        project: Project;
        transactions: TransactionMessage[];
        outAmount: number;
        outAmountMin: number;
        priceImpact?: PriceImpactPercent;
        fees: Fee[];
    }
}
export declare type Type = $.api.TradeSwapResponse;
export declare function getDefaultValue(): $.api.TradeSwapResponse;
export declare function createValue(partialValue: Partial<$.api.TradeSwapResponse>): $.api.TradeSwapResponse;
export declare function encodeJson(value: $.api.TradeSwapResponse): unknown;
export declare function decodeJson(value: any): $.api.TradeSwapResponse;
export declare function encodeBinary(value: $.api.TradeSwapResponse): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.api.TradeSwapResponse;
//# sourceMappingURL=TradeSwapResponse.d.ts.map