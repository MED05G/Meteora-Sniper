import { Type as Kind } from "./(Field)/Kind";
import { Type as Cardinality } from "./(Field)/Cardinality";
import { Type as Option } from "./Option";
export declare namespace $.google.protobuf {
    interface Field {
        kind: Kind;
        cardinality: Cardinality;
        number: number;
        name: string;
        typeUrl: string;
        oneofIndex: number;
        packed: boolean;
        options: Option[];
        jsonName: string;
        defaultValue: string;
    }
}
export declare type Type = $.google.protobuf.Field;
export declare function getDefaultValue(): $.google.protobuf.Field;
export declare function createValue(partialValue: Partial<$.google.protobuf.Field>): $.google.protobuf.Field;
export declare function encodeJson(value: $.google.protobuf.Field): unknown;
export declare function decodeJson(value: any): $.google.protobuf.Field;
export declare function encodeBinary(value: $.google.protobuf.Field): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.google.protobuf.Field;
//# sourceMappingURL=Field.d.ts.map