import { Type as EnumValueDescriptorProto } from "./EnumValueDescriptorProto";
import { Type as EnumOptions } from "./EnumOptions";
import { Type as EnumReservedRange } from "./(EnumDescriptorProto)/EnumReservedRange";
export declare namespace $.google.protobuf {
    interface EnumDescriptorProto {
        name?: string;
        value: EnumValueDescriptorProto[];
        options?: EnumOptions;
        reservedRange: EnumReservedRange[];
        reservedName: string[];
    }
}
export declare type Type = $.google.protobuf.EnumDescriptorProto;
export declare function getDefaultValue(): $.google.protobuf.EnumDescriptorProto;
export declare function createValue(partialValue: Partial<$.google.protobuf.EnumDescriptorProto>): $.google.protobuf.EnumDescriptorProto;
export declare function encodeJson(value: $.google.protobuf.EnumDescriptorProto): unknown;
export declare function decodeJson(value: any): $.google.protobuf.EnumDescriptorProto;
export declare function encodeBinary(value: $.google.protobuf.EnumDescriptorProto): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.google.protobuf.EnumDescriptorProto;
//# sourceMappingURL=EnumDescriptorProto.d.ts.map