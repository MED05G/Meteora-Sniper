import { Type as FieldDescriptorProto } from "./FieldDescriptorProto";
import { Type as DescriptorProto_1 } from "./DescriptorProto";
import { Type as EnumDescriptorProto } from "./EnumDescriptorProto";
import { Type as ExtensionRange } from "./(DescriptorProto)/ExtensionRange";
import { Type as MessageOptions } from "./MessageOptions";
import { Type as OneofDescriptorProto } from "./OneofDescriptorProto";
import { Type as ReservedRange } from "./(DescriptorProto)/ReservedRange";
export declare namespace $.google.protobuf {
    interface DescriptorProto {
        name?: string;
        field: FieldDescriptorProto[];
        nestedType: DescriptorProto_1[];
        enumType: EnumDescriptorProto[];
        extensionRange: ExtensionRange[];
        extension: FieldDescriptorProto[];
        options?: MessageOptions;
        oneofDecl: OneofDescriptorProto[];
        reservedRange: ReservedRange[];
        reservedName: string[];
    }
}
export declare type Type = $.google.protobuf.DescriptorProto;
export declare function getDefaultValue(): $.google.protobuf.DescriptorProto;
export declare function createValue(partialValue: Partial<$.google.protobuf.DescriptorProto>): $.google.protobuf.DescriptorProto;
export declare function encodeJson(value: $.google.protobuf.DescriptorProto): unknown;
export declare function decodeJson(value: any): $.google.protobuf.DescriptorProto;
export declare function encodeBinary(value: $.google.protobuf.DescriptorProto): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.google.protobuf.DescriptorProto;
//# sourceMappingURL=DescriptorProto.d.ts.map