import { Type as Label } from "./(FieldDescriptorProto)/Label";
import { Type as Type_1 } from "./(FieldDescriptorProto)/Type";
import { Type as FieldOptions } from "./FieldOptions";
export declare namespace $.google.protobuf {
    interface FieldDescriptorProto {
        name?: string;
        extendee?: string;
        number?: number;
        label?: Label;
        type?: Type_1;
        typeName?: string;
        defaultValue?: string;
        options?: FieldOptions;
        oneofIndex?: number;
        jsonName?: string;
    }
}
export declare type Type = $.google.protobuf.FieldDescriptorProto;
export declare function getDefaultValue(): $.google.protobuf.FieldDescriptorProto;
export declare function createValue(partialValue: Partial<$.google.protobuf.FieldDescriptorProto>): $.google.protobuf.FieldDescriptorProto;
export declare function encodeJson(value: $.google.protobuf.FieldDescriptorProto): unknown;
export declare function decodeJson(value: any): $.google.protobuf.FieldDescriptorProto;
export declare function encodeBinary(value: $.google.protobuf.FieldDescriptorProto): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.google.protobuf.FieldDescriptorProto;
//# sourceMappingURL=FieldDescriptorProto.d.ts.map