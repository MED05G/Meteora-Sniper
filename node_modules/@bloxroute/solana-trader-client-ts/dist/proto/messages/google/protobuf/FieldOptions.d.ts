import { Type as CType } from "./(FieldOptions)/CType";
import { Type as JSType } from "./(FieldOptions)/JSType";
import { Type as UninterpretedOption } from "./UninterpretedOption";
export declare namespace $.google.protobuf {
    interface FieldOptions {
        ctype?: CType;
        packed?: boolean;
        deprecated?: boolean;
        lazy?: boolean;
        jstype?: JSType;
        weak?: boolean;
        uninterpretedOption: UninterpretedOption[];
    }
}
export declare type Type = $.google.protobuf.FieldOptions;
export declare function getDefaultValue(): $.google.protobuf.FieldOptions;
export declare function createValue(partialValue: Partial<$.google.protobuf.FieldOptions>): $.google.protobuf.FieldOptions;
export declare function encodeJson(value: $.google.protobuf.FieldOptions): unknown;
export declare function decodeJson(value: any): $.google.protobuf.FieldOptions;
export declare function encodeBinary(value: $.google.protobuf.FieldOptions): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.google.protobuf.FieldOptions;
//# sourceMappingURL=FieldOptions.d.ts.map