import { Type as DescriptorProto } from "./DescriptorProto";
import { Type as EnumDescriptorProto } from "./EnumDescriptorProto";
import { Type as ServiceDescriptorProto } from "./ServiceDescriptorProto";
import { Type as FieldDescriptorProto } from "./FieldDescriptorProto";
import { Type as FileOptions } from "./FileOptions";
import { Type as SourceCodeInfo } from "./SourceCodeInfo";
export declare namespace $.google.protobuf {
    interface FileDescriptorProto {
        name?: string;
        package?: string;
        dependency: string[];
        messageType: DescriptorProto[];
        enumType: EnumDescriptorProto[];
        service: ServiceDescriptorProto[];
        extension: FieldDescriptorProto[];
        options?: FileOptions;
        sourceCodeInfo?: SourceCodeInfo;
        publicDependency: number[];
        weakDependency: number[];
        syntax?: string;
    }
}
export declare type Type = $.google.protobuf.FileDescriptorProto;
export declare function getDefaultValue(): $.google.protobuf.FileDescriptorProto;
export declare function createValue(partialValue: Partial<$.google.protobuf.FileDescriptorProto>): $.google.protobuf.FileDescriptorProto;
export declare function encodeJson(value: $.google.protobuf.FileDescriptorProto): unknown;
export declare function decodeJson(value: any): $.google.protobuf.FileDescriptorProto;
export declare function encodeBinary(value: $.google.protobuf.FileDescriptorProto): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.google.protobuf.FileDescriptorProto;
//# sourceMappingURL=FileDescriptorProto.d.ts.map