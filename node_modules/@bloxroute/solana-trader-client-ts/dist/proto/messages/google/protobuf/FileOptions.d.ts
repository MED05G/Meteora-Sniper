import { Type as OptimizeMode } from "./(FileOptions)/OptimizeMode";
import { Type as UninterpretedOption } from "./UninterpretedOption";
export declare namespace $.google.protobuf {
    interface FileOptions {
        javaPackage?: string;
        javaOuterClassname?: string;
        optimizeFor?: OptimizeMode;
        javaMultipleFiles?: boolean;
        goPackage?: string;
        ccGenericServices?: boolean;
        javaGenericServices?: boolean;
        pyGenericServices?: boolean;
        /** @deprecated */
        javaGenerateEqualsAndHash?: boolean;
        deprecated?: boolean;
        javaStringCheckUtf8?: boolean;
        ccEnableArenas?: boolean;
        objcClassPrefix?: string;
        csharpNamespace?: string;
        swiftPrefix?: string;
        phpClassPrefix?: string;
        phpNamespace?: string;
        phpGenericServices?: boolean;
        phpMetadataNamespace?: string;
        rubyPackage?: string;
        uninterpretedOption: UninterpretedOption[];
    }
}
export declare type Type = $.google.protobuf.FileOptions;
export declare function getDefaultValue(): $.google.protobuf.FileOptions;
export declare function createValue(partialValue: Partial<$.google.protobuf.FileOptions>): $.google.protobuf.FileOptions;
export declare function encodeJson(value: $.google.protobuf.FileOptions): unknown;
export declare function decodeJson(value: any): $.google.protobuf.FileOptions;
export declare function encodeBinary(value: $.google.protobuf.FileOptions): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.google.protobuf.FileOptions;
//# sourceMappingURL=FileOptions.d.ts.map