import { Type as TransactionMessageHeader } from "./TransactionMessageHeader.js";
import { Type as Instruction } from "./Instruction.js";
export declare namespace $.geyser {
    interface TransactionMessage {
        header?: TransactionMessageHeader;
        accountKeys: string[];
        recentBlockhash: string;
        instructions: Instruction[];
    }
}
export declare type Type = $.geyser.TransactionMessage;
export declare function getDefaultValue(): $.geyser.TransactionMessage;
export declare function createValue(partialValue: Partial<$.geyser.TransactionMessage>): $.geyser.TransactionMessage;
export declare function encodeJson(value: $.geyser.TransactionMessage): unknown;
export declare function decodeJson(value: any): $.geyser.TransactionMessage;
export declare function encodeBinary(value: $.geyser.TransactionMessage): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.geyser.TransactionMessage;
//# sourceMappingURL=TransactionMessage.d.ts.map