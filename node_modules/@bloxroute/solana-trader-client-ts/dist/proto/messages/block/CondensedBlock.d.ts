import { Type as Header } from "../shared/Header";
export declare namespace $.block {
    interface CondensedBlock {
        header?: Header;
        previousBlockhash: string;
        blockhash: string;
        parentSlot: string;
        versionedTransactions: Uint8Array[];
        slot: string;
        commitment: string;
    }
}
export declare type Type = $.block.CondensedBlock;
export declare function getDefaultValue(): $.block.CondensedBlock;
export declare function createValue(partialValue: Partial<$.block.CondensedBlock>): $.block.CondensedBlock;
export declare function encodeJson(value: $.block.CondensedBlock): unknown;
export declare function decodeJson(value: any): $.block.CondensedBlock;
export declare function encodeBinary(value: $.block.CondensedBlock): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.block.CondensedBlock;
//# sourceMappingURL=CondensedBlock.d.ts.map