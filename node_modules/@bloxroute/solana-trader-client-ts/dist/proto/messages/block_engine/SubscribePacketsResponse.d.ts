import { Type as Header } from "../shared/Header";
import { Type as PacketBatch } from "../packet/PacketBatch";
export declare namespace $.block_engine {
    interface SubscribePacketsResponse {
        header?: Header;
        batch?: PacketBatch;
    }
}
export declare type Type = $.block_engine.SubscribePacketsResponse;
export declare function getDefaultValue(): $.block_engine.SubscribePacketsResponse;
export declare function createValue(partialValue: Partial<$.block_engine.SubscribePacketsResponse>): $.block_engine.SubscribePacketsResponse;
export declare function encodeJson(value: $.block_engine.SubscribePacketsResponse): unknown;
export declare function decodeJson(value: any): $.block_engine.SubscribePacketsResponse;
export declare function encodeBinary(value: $.block_engine.SubscribePacketsResponse): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.block_engine.SubscribePacketsResponse;
//# sourceMappingURL=SubscribePacketsResponse.d.ts.map