import { Type as Heartbeat } from "../shared/Heartbeat";
import { Type as PacketBatch } from "../packet/PacketBatch";
import { Type as Header } from "../shared/Header";
export declare namespace $.relayer {
    interface SubscribePacketsResponse {
        header?: Header;
        msg?: ({
            field: "heartbeat";
            value: Heartbeat;
        } | {
            field: "batch";
            value: PacketBatch;
        });
    }
}
export declare type Type = $.relayer.SubscribePacketsResponse;
export declare function getDefaultValue(): $.relayer.SubscribePacketsResponse;
export declare function createValue(partialValue: Partial<$.relayer.SubscribePacketsResponse>): $.relayer.SubscribePacketsResponse;
export declare function encodeJson(value: $.relayer.SubscribePacketsResponse): unknown;
export declare function decodeJson(value: any): $.relayer.SubscribePacketsResponse;
export declare function encodeBinary(value: $.relayer.SubscribePacketsResponse): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.relayer.SubscribePacketsResponse;
//# sourceMappingURL=SubscribePacketsResponse.d.ts.map