import { Type as ExternalDocumentation } from "./ExternalDocumentation";
import { Type as Response } from "./Response";
import { Type as Scheme } from "./Scheme";
import { Type as SecurityRequirement } from "./SecurityRequirement";
import { Type as Value } from "../../../../google/protobuf/Value";
export declare namespace $.grpc.gateway.protoc_gen_openapiv2.options {
    interface Operation {
        tags: string[];
        summary: string;
        description: string;
        externalDocs?: ExternalDocumentation;
        operationId: string;
        consumes: string[];
        produces: string[];
        responses: Map<string, Response>;
        schemes: Scheme[];
        deprecated: boolean;
        security: SecurityRequirement[];
        extensions: Map<string, Value>;
    }
}
export declare type Type = $.grpc.gateway.protoc_gen_openapiv2.options.Operation;
export declare function getDefaultValue(): $.grpc.gateway.protoc_gen_openapiv2.options.Operation;
export declare function createValue(partialValue: Partial<$.grpc.gateway.protoc_gen_openapiv2.options.Operation>): $.grpc.gateway.protoc_gen_openapiv2.options.Operation;
export declare function encodeJson(value: $.grpc.gateway.protoc_gen_openapiv2.options.Operation): unknown;
export declare function decodeJson(value: any): $.grpc.gateway.protoc_gen_openapiv2.options.Operation;
export declare function encodeBinary(value: $.grpc.gateway.protoc_gen_openapiv2.options.Operation): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.grpc.gateway.protoc_gen_openapiv2.options.Operation;
//# sourceMappingURL=Operation.d.ts.map