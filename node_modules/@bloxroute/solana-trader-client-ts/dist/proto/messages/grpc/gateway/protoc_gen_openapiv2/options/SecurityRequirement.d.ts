import { Type as SecurityRequirementValue } from "./(SecurityRequirement)/SecurityRequirementValue";
export declare namespace $.grpc.gateway.protoc_gen_openapiv2.options {
    interface SecurityRequirement {
        securityRequirement: Map<string, SecurityRequirementValue>;
    }
}
export declare type Type = $.grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement;
export declare function getDefaultValue(): $.grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement;
export declare function createValue(partialValue: Partial<$.grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement>): $.grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement;
export declare function encodeJson(value: $.grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement): unknown;
export declare function decodeJson(value: any): $.grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement;
export declare function encodeBinary(value: $.grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement;
//# sourceMappingURL=SecurityRequirement.d.ts.map