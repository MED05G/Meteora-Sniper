import { Type as Contact } from "./Contact";
import { Type as License } from "./License";
import { Type as Value } from "../../../../google/protobuf/Value";
export declare namespace $.grpc.gateway.protoc_gen_openapiv2.options {
    interface Info {
        title: string;
        description: string;
        termsOfService: string;
        contact?: Contact;
        license?: License;
        version: string;
        extensions: Map<string, Value>;
    }
}
export declare type Type = $.grpc.gateway.protoc_gen_openapiv2.options.Info;
export declare function getDefaultValue(): $.grpc.gateway.protoc_gen_openapiv2.options.Info;
export declare function createValue(partialValue: Partial<$.grpc.gateway.protoc_gen_openapiv2.options.Info>): $.grpc.gateway.protoc_gen_openapiv2.options.Info;
export declare function encodeJson(value: $.grpc.gateway.protoc_gen_openapiv2.options.Info): unknown;
export declare function decodeJson(value: any): $.grpc.gateway.protoc_gen_openapiv2.options.Info;
export declare function encodeBinary(value: $.grpc.gateway.protoc_gen_openapiv2.options.Info): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.grpc.gateway.protoc_gen_openapiv2.options.Info;
//# sourceMappingURL=Info.d.ts.map