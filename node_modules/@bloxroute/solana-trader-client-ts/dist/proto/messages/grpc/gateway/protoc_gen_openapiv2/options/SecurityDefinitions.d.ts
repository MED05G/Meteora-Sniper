import { Type as SecurityScheme } from "./SecurityScheme";
export declare namespace $.grpc.gateway.protoc_gen_openapiv2.options {
    interface SecurityDefinitions {
        security: Map<string, SecurityScheme>;
    }
}
export declare type Type = $.grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions;
export declare function getDefaultValue(): $.grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions;
export declare function createValue(partialValue: Partial<$.grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions>): $.grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions;
export declare function encodeJson(value: $.grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions): unknown;
export declare function decodeJson(value: any): $.grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions;
export declare function encodeBinary(value: $.grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions): Uint8Array;
export declare function decodeBinary(binary: Uint8Array): $.grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions;
//# sourceMappingURL=SecurityDefinitions.d.ts.map