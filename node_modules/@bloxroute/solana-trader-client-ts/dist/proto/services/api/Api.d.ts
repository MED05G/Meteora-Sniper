import { RpcReturnType, RpcClientImpl } from "../../runtime/rpc";
import { Type as GetRateLimitRequest, encodeBinary, decodeBinary } from "../../messages/api/GetRateLimitRequest";
import { Type as GetRateLimitResponse, encodeBinary as encodeBinary_1, decodeBinary as decodeBinary_1 } from "../../messages/api/GetRateLimitResponse";
import { Type as GetTransactionRequest, encodeBinary as encodeBinary_2, decodeBinary as decodeBinary_2 } from "../../messages/api/GetTransactionRequest";
import { Type as GetTransactionResponse, encodeBinary as encodeBinary_3, decodeBinary as decodeBinary_3 } from "../../messages/api/GetTransactionResponse";
import { Type as PostSubmitRequest, encodeBinary as encodeBinary_4, decodeBinary as decodeBinary_4 } from "../../messages/api/PostSubmitRequest";
import { Type as PostSubmitResponse, encodeBinary as encodeBinary_5, decodeBinary as decodeBinary_5 } from "../../messages/api/PostSubmitResponse";
import { Type as PostSubmitBatchRequest, encodeBinary as encodeBinary_6, decodeBinary as decodeBinary_6 } from "../../messages/api/PostSubmitBatchRequest";
import { Type as PostSubmitBatchResponse, encodeBinary as encodeBinary_7, decodeBinary as decodeBinary_7 } from "../../messages/api/PostSubmitBatchResponse";
import { Type as PostSubmitSnipeRequest, encodeBinary as encodeBinary_8, decodeBinary as decodeBinary_8 } from "../../messages/api/PostSubmitSnipeRequest";
import { Type as PostSubmitSnipeResponse, encodeBinary as encodeBinary_9, decodeBinary as decodeBinary_9 } from "../../messages/api/PostSubmitSnipeResponse";
import { Type as PostSubmitPaladinRequest, encodeBinary as encodeBinary_10, decodeBinary as decodeBinary_10 } from "../../messages/api/PostSubmitPaladinRequest";
import { Type as GetRaydiumPoolsRequest, encodeBinary as encodeBinary_11, decodeBinary as decodeBinary_11 } from "../../messages/api/GetRaydiumPoolsRequest";
import { Type as GetRaydiumPoolsResponse, encodeBinary as encodeBinary_12, decodeBinary as decodeBinary_12 } from "../../messages/api/GetRaydiumPoolsResponse";
import { Type as GetRaydiumPoolReserveRequest, encodeBinary as encodeBinary_13, decodeBinary as decodeBinary_13 } from "../../messages/api/GetRaydiumPoolReserveRequest";
import { Type as GetRaydiumPoolReserveResponse, encodeBinary as encodeBinary_14, decodeBinary as decodeBinary_14 } from "../../messages/api/GetRaydiumPoolReserveResponse";
import { Type as GetRaydiumQuotesRequest, encodeBinary as encodeBinary_15, decodeBinary as decodeBinary_15 } from "../../messages/api/GetRaydiumQuotesRequest";
import { Type as GetRaydiumQuotesResponse, encodeBinary as encodeBinary_16, decodeBinary as decodeBinary_16 } from "../../messages/api/GetRaydiumQuotesResponse";
import { Type as GetPumpFunQuotesRequest, encodeBinary as encodeBinary_17, decodeBinary as decodeBinary_17 } from "../../messages/api/GetPumpFunQuotesRequest";
import { Type as GetPumpFunQuotesResponse, encodeBinary as encodeBinary_18, decodeBinary as decodeBinary_18 } from "../../messages/api/GetPumpFunQuotesResponse";
import { Type as GetRaydiumCPMMQuotesRequest, encodeBinary as encodeBinary_19, decodeBinary as decodeBinary_19 } from "../../messages/api/GetRaydiumCPMMQuotesRequest";
import { Type as GetRaydiumCPMMQuotesResponse, encodeBinary as encodeBinary_20, decodeBinary as decodeBinary_20 } from "../../messages/api/GetRaydiumCPMMQuotesResponse";
import { Type as GetRaydiumPricesRequest, encodeBinary as encodeBinary_21, decodeBinary as decodeBinary_21 } from "../../messages/api/GetRaydiumPricesRequest";
import { Type as GetRaydiumPricesResponse, encodeBinary as encodeBinary_22, decodeBinary as decodeBinary_22 } from "../../messages/api/GetRaydiumPricesResponse";
import { Type as GetRaydiumCLMMQuotesRequest, encodeBinary as encodeBinary_23, decodeBinary as decodeBinary_23 } from "../../messages/api/GetRaydiumCLMMQuotesRequest";
import { Type as GetRaydiumCLMMQuotesResponse, encodeBinary as encodeBinary_24, decodeBinary as decodeBinary_24 } from "../../messages/api/GetRaydiumCLMMQuotesResponse";
import { Type as GetRaydiumCLMMPoolsRequest, encodeBinary as encodeBinary_25, decodeBinary as decodeBinary_25 } from "../../messages/api/GetRaydiumCLMMPoolsRequest";
import { Type as GetRaydiumCLMMPoolsResponse, encodeBinary as encodeBinary_26, decodeBinary as decodeBinary_26 } from "../../messages/api/GetRaydiumCLMMPoolsResponse";
import { Type as PostRaydiumSwapRequest, encodeBinary as encodeBinary_27, decodeBinary as decodeBinary_27 } from "../../messages/api/PostRaydiumSwapRequest";
import { Type as PostRaydiumSwapResponse, encodeBinary as encodeBinary_28, decodeBinary as decodeBinary_28 } from "../../messages/api/PostRaydiumSwapResponse";
import { Type as PostRaydiumRouteSwapRequest, encodeBinary as encodeBinary_29, decodeBinary as decodeBinary_29 } from "../../messages/api/PostRaydiumRouteSwapRequest";
import { Type as PostRaydiumRouteSwapResponse, encodeBinary as encodeBinary_30, decodeBinary as decodeBinary_30 } from "../../messages/api/PostRaydiumRouteSwapResponse";
import { Type as PostRaydiumCPMMSwapRequest, encodeBinary as encodeBinary_31, decodeBinary as decodeBinary_31 } from "../../messages/api/PostRaydiumCPMMSwapRequest";
import { Type as PostRaydiumCPMMSwapResponse, encodeBinary as encodeBinary_32, decodeBinary as decodeBinary_32 } from "../../messages/api/PostRaydiumCPMMSwapResponse";
import { Type as GetJupiterQuotesRequest, encodeBinary as encodeBinary_33, decodeBinary as decodeBinary_33 } from "../../messages/api/GetJupiterQuotesRequest";
import { Type as GetJupiterQuotesResponse, encodeBinary as encodeBinary_34, decodeBinary as decodeBinary_34 } from "../../messages/api/GetJupiterQuotesResponse";
import { Type as GetJupiterPricesRequest, encodeBinary as encodeBinary_35, decodeBinary as decodeBinary_35 } from "../../messages/api/GetJupiterPricesRequest";
import { Type as GetJupiterPricesResponse, encodeBinary as encodeBinary_36, decodeBinary as decodeBinary_36 } from "../../messages/api/GetJupiterPricesResponse";
import { Type as PostJupiterSwapRequest, encodeBinary as encodeBinary_37, decodeBinary as decodeBinary_37 } from "../../messages/api/PostJupiterSwapRequest";
import { Type as PostJupiterSwapResponse, encodeBinary as encodeBinary_38, decodeBinary as decodeBinary_38 } from "../../messages/api/PostJupiterSwapResponse";
import { Type as PostRaydiumSwapInstructionsRequest, encodeBinary as encodeBinary_39, decodeBinary as decodeBinary_39 } from "../../messages/api/PostRaydiumSwapInstructionsRequest";
import { Type as PostRaydiumSwapInstructionsResponse, encodeBinary as encodeBinary_40, decodeBinary as decodeBinary_40 } from "../../messages/api/PostRaydiumSwapInstructionsResponse";
import { Type as PostJupiterSwapInstructionsRequest, encodeBinary as encodeBinary_41, decodeBinary as decodeBinary_41 } from "../../messages/api/PostJupiterSwapInstructionsRequest";
import { Type as PostJupiterSwapInstructionsResponse, encodeBinary as encodeBinary_42, decodeBinary as decodeBinary_42 } from "../../messages/api/PostJupiterSwapInstructionsResponse";
import { Type as PostJupiterRouteSwapRequest, encodeBinary as encodeBinary_43, decodeBinary as decodeBinary_43 } from "../../messages/api/PostJupiterRouteSwapRequest";
import { Type as PostJupiterRouteSwapResponse, encodeBinary as encodeBinary_44, decodeBinary as decodeBinary_44 } from "../../messages/api/PostJupiterRouteSwapResponse";
import { Type as GetMarketsRequestV2, encodeBinary as encodeBinary_45, decodeBinary as decodeBinary_45 } from "../../messages/api/GetMarketsRequestV2";
import { Type as GetMarketsResponseV2, encodeBinary as encodeBinary_46, decodeBinary as decodeBinary_46 } from "../../messages/api/GetMarketsResponseV2";
import { Type as GetTickersRequestV2, encodeBinary as encodeBinary_47, decodeBinary as decodeBinary_47 } from "../../messages/api/GetTickersRequestV2";
import { Type as GetTickersResponseV2, encodeBinary as encodeBinary_48, decodeBinary as decodeBinary_48 } from "../../messages/api/GetTickersResponseV2";
import { Type as GetOrderbookRequestV2, encodeBinary as encodeBinary_49, decodeBinary as decodeBinary_49 } from "../../messages/api/GetOrderbookRequestV2";
import { Type as GetOrderbookResponseV2, encodeBinary as encodeBinary_50, decodeBinary as decodeBinary_50 } from "../../messages/api/GetOrderbookResponseV2";
import { Type as GetMarketDepthRequestV2, encodeBinary as encodeBinary_51, decodeBinary as decodeBinary_51 } from "../../messages/api/GetMarketDepthRequestV2";
import { Type as GetMarketDepthResponseV2, encodeBinary as encodeBinary_52, decodeBinary as decodeBinary_52 } from "../../messages/api/GetMarketDepthResponseV2";
import { Type as PostOrderRequestV2, encodeBinary as encodeBinary_53, decodeBinary as decodeBinary_53 } from "../../messages/api/PostOrderRequestV2";
import { Type as PostOrderResponse, encodeBinary as encodeBinary_54, decodeBinary as decodeBinary_54 } from "../../messages/api/PostOrderResponse";
import { Type as PostCancelOrderRequestV2, encodeBinary as encodeBinary_55, decodeBinary as decodeBinary_55 } from "../../messages/api/PostCancelOrderRequestV2";
import { Type as PostCancelOrderResponseV2, encodeBinary as encodeBinary_56, decodeBinary as decodeBinary_56 } from "../../messages/api/PostCancelOrderResponseV2";
import { Type as PostReplaceOrderRequestV2, encodeBinary as encodeBinary_57, decodeBinary as decodeBinary_57 } from "../../messages/api/PostReplaceOrderRequestV2";
import { Type as PostZetaCrossMarginAccountRequest, encodeBinary as encodeBinary_58, decodeBinary as decodeBinary_58 } from "../../messages/api/PostZetaCrossMarginAccountRequest";
import { Type as PostZetaCrossMarginAccountResponse, encodeBinary as encodeBinary_59, decodeBinary as decodeBinary_59 } from "../../messages/api/PostZetaCrossMarginAccountResponse";
import { Type as PostSettleRequestV2, encodeBinary as encodeBinary_60, decodeBinary as decodeBinary_60 } from "../../messages/api/PostSettleRequestV2";
import { Type as PostSettleResponse, encodeBinary as encodeBinary_61, decodeBinary as decodeBinary_61 } from "../../messages/api/PostSettleResponse";
import { Type as GetOpenOrdersRequestV2, encodeBinary as encodeBinary_62, decodeBinary as decodeBinary_62 } from "../../messages/api/GetOpenOrdersRequestV2";
import { Type as GetOpenOrdersResponseV2, encodeBinary as encodeBinary_63, decodeBinary as decodeBinary_63 } from "../../messages/api/GetOpenOrdersResponseV2";
import { Type as GetUnsettledRequestV2, encodeBinary as encodeBinary_64, decodeBinary as decodeBinary_64 } from "../../messages/api/GetUnsettledRequestV2";
import { Type as GetUnsettledResponse, encodeBinary as encodeBinary_65, decodeBinary as decodeBinary_65 } from "../../messages/api/GetUnsettledResponse";
import { Type as GetPriceRequest, encodeBinary as encodeBinary_66, decodeBinary as decodeBinary_66 } from "../../messages/api/GetPriceRequest";
import { Type as GetPriceResponse, encodeBinary as encodeBinary_67, decodeBinary as decodeBinary_67 } from "../../messages/api/GetPriceResponse";
import { Type as GetMarketsRequest, encodeBinary as encodeBinary_68, decodeBinary as decodeBinary_68 } from "../../messages/api/GetMarketsRequest";
import { Type as GetMarketsResponse, encodeBinary as encodeBinary_69, decodeBinary as decodeBinary_69 } from "../../messages/api/GetMarketsResponse";
import { Type as GetPoolsRequest, encodeBinary as encodeBinary_70, decodeBinary as decodeBinary_70 } from "../../messages/api/GetPoolsRequest";
import { Type as GetPoolsResponse, encodeBinary as encodeBinary_71, decodeBinary as decodeBinary_71 } from "../../messages/api/GetPoolsResponse";
import { Type as GetTickersRequest, encodeBinary as encodeBinary_72, decodeBinary as decodeBinary_72 } from "../../messages/api/GetTickersRequest";
import { Type as GetTickersResponse, encodeBinary as encodeBinary_73, decodeBinary as decodeBinary_73 } from "../../messages/api/GetTickersResponse";
import { Type as GetKlineRequest, encodeBinary as encodeBinary_74, decodeBinary as decodeBinary_74 } from "../../messages/api/GetKlineRequest";
import { Type as GetKlineResponse, encodeBinary as encodeBinary_75, decodeBinary as decodeBinary_75 } from "../../messages/api/GetKlineResponse";
import { Type as GetOrderbookRequest, encodeBinary as encodeBinary_76, decodeBinary as decodeBinary_76 } from "../../messages/api/GetOrderbookRequest";
import { Type as GetOrderbookResponse, encodeBinary as encodeBinary_77, decodeBinary as decodeBinary_77 } from "../../messages/api/GetOrderbookResponse";
import { Type as GetMarketDepthRequest, encodeBinary as encodeBinary_78, decodeBinary as decodeBinary_78 } from "../../messages/api/GetMarketDepthRequest";
import { Type as GetMarketDepthResponse, encodeBinary as encodeBinary_79, decodeBinary as decodeBinary_79 } from "../../messages/api/GetMarketDepthResponse";
import { Type as GetTradesRequest, encodeBinary as encodeBinary_80, decodeBinary as decodeBinary_80 } from "../../messages/api/GetTradesRequest";
import { Type as GetTradesResponse, encodeBinary as encodeBinary_81, decodeBinary as decodeBinary_81 } from "../../messages/api/GetTradesResponse";
import { Type as GetQuotesRequest, encodeBinary as encodeBinary_82, decodeBinary as decodeBinary_82 } from "../../messages/api/GetQuotesRequest";
import { Type as GetQuotesResponse, encodeBinary as encodeBinary_83, decodeBinary as decodeBinary_83 } from "../../messages/api/GetQuotesResponse";
import { Type as GetServerTimeRequest, encodeBinary as encodeBinary_84, decodeBinary as decodeBinary_84 } from "../../messages/api/GetServerTimeRequest";
import { Type as GetServerTimeResponse, encodeBinary as encodeBinary_85, decodeBinary as decodeBinary_85 } from "../../messages/api/GetServerTimeResponse";
import { Type as GetRecentBlockHashRequest, encodeBinary as encodeBinary_86, decodeBinary as decodeBinary_86 } from "../../messages/api/GetRecentBlockHashRequest";
import { Type as GetRecentBlockHashResponse, encodeBinary as encodeBinary_87, decodeBinary as decodeBinary_87 } from "../../messages/api/GetRecentBlockHashResponse";
import { Type as GetRecentBlockHashRequestV2, encodeBinary as encodeBinary_88, decodeBinary as decodeBinary_88 } from "../../messages/api/GetRecentBlockHashRequestV2";
import { Type as GetRecentBlockHashResponseV2, encodeBinary as encodeBinary_89, decodeBinary as decodeBinary_89 } from "../../messages/api/GetRecentBlockHashResponseV2";
import { Type as GetPriorityFeeRequest, encodeBinary as encodeBinary_90, decodeBinary as decodeBinary_90 } from "../../messages/api/GetPriorityFeeRequest";
import { Type as GetPriorityFeeResponse, encodeBinary as encodeBinary_91, decodeBinary as decodeBinary_91 } from "../../messages/api/GetPriorityFeeResponse";
import { Type as GetPriorityFeeByProgramRequest, encodeBinary as encodeBinary_92, decodeBinary as decodeBinary_92 } from "../../messages/api/GetPriorityFeeByProgramRequest";
import { Type as GetPriorityFeeByProgramResponse, encodeBinary as encodeBinary_93, decodeBinary as decodeBinary_93 } from "../../messages/api/GetPriorityFeeByProgramResponse";
import { Type as GetAccountBalanceRequest, encodeBinary as encodeBinary_94, decodeBinary as decodeBinary_94 } from "../../messages/api/GetAccountBalanceRequest";
import { Type as GetAccountBalanceResponse, encodeBinary as encodeBinary_95, decodeBinary as decodeBinary_95 } from "../../messages/api/GetAccountBalanceResponse";
import { Type as GetTokenAccountsRequest, encodeBinary as encodeBinary_96, decodeBinary as decodeBinary_96 } from "../../messages/api/GetTokenAccountsRequest";
import { Type as GetTokenAccountsResponse, encodeBinary as encodeBinary_97, decodeBinary as decodeBinary_97 } from "../../messages/api/GetTokenAccountsResponse";
import { Type as PostOrderRequest, encodeBinary as encodeBinary_98, decodeBinary as decodeBinary_98 } from "../../messages/api/PostOrderRequest";
import { Type as PostCancelOrderRequest, encodeBinary as encodeBinary_99, decodeBinary as decodeBinary_99 } from "../../messages/api/PostCancelOrderRequest";
import { Type as PostCancelOrderResponse, encodeBinary as encodeBinary_100, decodeBinary as decodeBinary_100 } from "../../messages/api/PostCancelOrderResponse";
import { Type as PostCancelByClientOrderIDRequest, encodeBinary as encodeBinary_101, decodeBinary as decodeBinary_101 } from "../../messages/api/PostCancelByClientOrderIDRequest";
import { Type as PostCancelAllRequest, encodeBinary as encodeBinary_102, decodeBinary as decodeBinary_102 } from "../../messages/api/PostCancelAllRequest";
import { Type as PostCancelAllResponse, encodeBinary as encodeBinary_103, decodeBinary as decodeBinary_103 } from "../../messages/api/PostCancelAllResponse";
import { Type as PostReplaceOrderRequest, encodeBinary as encodeBinary_104, decodeBinary as decodeBinary_104 } from "../../messages/api/PostReplaceOrderRequest";
import { Type as PostSettleRequest, encodeBinary as encodeBinary_105, decodeBinary as decodeBinary_105 } from "../../messages/api/PostSettleRequest";
import { Type as TradeSwapRequest, encodeBinary as encodeBinary_106, decodeBinary as decodeBinary_106 } from "../../messages/api/TradeSwapRequest";
import { Type as TradeSwapResponse, encodeBinary as encodeBinary_107, decodeBinary as decodeBinary_107 } from "../../messages/api/TradeSwapResponse";
import { Type as GetOrdersRequest, encodeBinary as encodeBinary_108, decodeBinary as decodeBinary_108 } from "../../messages/api/GetOrdersRequest";
import { Type as GetOrdersResponse, encodeBinary as encodeBinary_109, decodeBinary as decodeBinary_109 } from "../../messages/api/GetOrdersResponse";
import { Type as GetOpenOrdersRequest, encodeBinary as encodeBinary_110, decodeBinary as decodeBinary_110 } from "../../messages/api/GetOpenOrdersRequest";
import { Type as GetOpenOrdersResponse, encodeBinary as encodeBinary_111, decodeBinary as decodeBinary_111 } from "../../messages/api/GetOpenOrdersResponse";
import { Type as GetOrderByIDRequest, encodeBinary as encodeBinary_112, decodeBinary as decodeBinary_112 } from "../../messages/api/GetOrderByIDRequest";
import { Type as GetOrderByIDResponse, encodeBinary as encodeBinary_113, decodeBinary as decodeBinary_113 } from "../../messages/api/GetOrderByIDResponse";
import { Type as GetUnsettledRequest, encodeBinary as encodeBinary_114, decodeBinary as decodeBinary_114 } from "../../messages/api/GetUnsettledRequest";
import { Type as RouteTradeSwapRequest, encodeBinary as encodeBinary_115, decodeBinary as decodeBinary_115 } from "../../messages/api/RouteTradeSwapRequest";
import { Type as GetOrderbooksRequest, encodeBinary as encodeBinary_116, decodeBinary as decodeBinary_116 } from "../../messages/api/GetOrderbooksRequest";
import { Type as GetOrderbooksStreamResponse, encodeBinary as encodeBinary_117, decodeBinary as decodeBinary_117 } from "../../messages/api/GetOrderbooksStreamResponse";
import { Type as GetMarketDepthsRequest, encodeBinary as encodeBinary_118, decodeBinary as decodeBinary_118 } from "../../messages/api/GetMarketDepthsRequest";
import { Type as GetMarketDepthsStreamResponse, encodeBinary as encodeBinary_119, decodeBinary as decodeBinary_119 } from "../../messages/api/GetMarketDepthsStreamResponse";
import { Type as GetTickersStreamRequest, encodeBinary as encodeBinary_120, decodeBinary as decodeBinary_120 } from "../../messages/api/GetTickersStreamRequest";
import { Type as GetTickersStreamResponse, encodeBinary as encodeBinary_121, decodeBinary as decodeBinary_121 } from "../../messages/api/GetTickersStreamResponse";
import { Type as GetZetaTransactionStreamRequest, encodeBinary as encodeBinary_122, decodeBinary as decodeBinary_122 } from "../../messages/api/GetZetaTransactionStreamRequest";
import { Type as GetZetaTransactionStreamResponse, encodeBinary as encodeBinary_123, decodeBinary as decodeBinary_123 } from "../../messages/api/GetZetaTransactionStreamResponse";
import { Type as GetTradesStreamResponse, encodeBinary as encodeBinary_124, decodeBinary as decodeBinary_124 } from "../../messages/api/GetTradesStreamResponse";
import { Type as GetOrderStatusStreamRequest, encodeBinary as encodeBinary_125, decodeBinary as decodeBinary_125 } from "../../messages/api/GetOrderStatusStreamRequest";
import { Type as GetOrderStatusStreamResponse, encodeBinary as encodeBinary_126, decodeBinary as decodeBinary_126 } from "../../messages/api/GetOrderStatusStreamResponse";
import { Type as GetBlockStreamRequest, encodeBinary as encodeBinary_127, decodeBinary as decodeBinary_127 } from "../../messages/api/GetBlockStreamRequest";
import { Type as GetBlockStreamResponse, encodeBinary as encodeBinary_128, decodeBinary as decodeBinary_128 } from "../../messages/api/GetBlockStreamResponse";
import { Type as GetBundleTipRequest, encodeBinary as encodeBinary_129, decodeBinary as decodeBinary_129 } from "../../messages/api/GetBundleTipRequest";
import { Type as GetBundleTipResponse, encodeBinary as encodeBinary_130, decodeBinary as decodeBinary_130 } from "../../messages/api/GetBundleTipResponse";
import { Type as GetQuotesStreamRequest, encodeBinary as encodeBinary_131, decodeBinary as decodeBinary_131 } from "../../messages/api/GetQuotesStreamRequest";
import { Type as GetQuotesStreamResponse, encodeBinary as encodeBinary_132, decodeBinary as decodeBinary_132 } from "../../messages/api/GetQuotesStreamResponse";
import { Type as GetPoolReservesStreamRequest, encodeBinary as encodeBinary_133, decodeBinary as decodeBinary_133 } from "../../messages/api/GetPoolReservesStreamRequest";
import { Type as GetPoolReservesStreamResponse, encodeBinary as encodeBinary_134, decodeBinary as decodeBinary_134 } from "../../messages/api/GetPoolReservesStreamResponse";
import { Type as GetPricesStreamRequest, encodeBinary as encodeBinary_135, decodeBinary as decodeBinary_135 } from "../../messages/api/GetPricesStreamRequest";
import { Type as GetPricesStreamResponse, encodeBinary as encodeBinary_136, decodeBinary as decodeBinary_136 } from "../../messages/api/GetPricesStreamResponse";
import { Type as GetNewRaydiumPoolsRequest, encodeBinary as encodeBinary_137, decodeBinary as decodeBinary_137 } from "../../messages/api/GetNewRaydiumPoolsRequest";
import { Type as GetNewRaydiumPoolsResponse, encodeBinary as encodeBinary_138, decodeBinary as decodeBinary_138 } from "../../messages/api/GetNewRaydiumPoolsResponse";
import { Type as GetNewRaydiumPoolsByTransactionRequest, encodeBinary as encodeBinary_139, decodeBinary as decodeBinary_139 } from "../../messages/api/GetNewRaydiumPoolsByTransactionRequest";
import { Type as GetNewRaydiumPoolsByTransactionResponse, encodeBinary as encodeBinary_140, decodeBinary as decodeBinary_140 } from "../../messages/api/GetNewRaydiumPoolsByTransactionResponse";
import { Type as GetSwapsStreamRequest, encodeBinary as encodeBinary_141, decodeBinary as decodeBinary_141 } from "../../messages/api/GetSwapsStreamRequest";
import { Type as GetSwapsStreamResponse, encodeBinary as encodeBinary_142, decodeBinary as decodeBinary_142 } from "../../messages/api/GetSwapsStreamResponse";
import { Type as GetPumpFunSwapsStreamRequest, encodeBinary as encodeBinary_143, decodeBinary as decodeBinary_143 } from "../../messages/api/GetPumpFunSwapsStreamRequest";
import { Type as GetPumpFunSwapsStreamResponse, encodeBinary as encodeBinary_144, decodeBinary as decodeBinary_144 } from "../../messages/api/GetPumpFunSwapsStreamResponse";
import { Type as GetPumpFunNewTokensStreamRequest, encodeBinary as encodeBinary_145, decodeBinary as decodeBinary_145 } from "../../messages/api/GetPumpFunNewTokensStreamRequest";
import { Type as GetPumpFunNewTokensStreamResponse, encodeBinary as encodeBinary_146, decodeBinary as decodeBinary_146 } from "../../messages/api/GetPumpFunNewTokensStreamResponse";
import { Type as GetPumpFunNewAmmPoolStreamRequest, encodeBinary as encodeBinary_147, decodeBinary as decodeBinary_147 } from "../../messages/api/GetPumpFunNewAmmPoolStreamRequest";
import { Type as GetPumpFunNewAmmPoolStreamResponse, encodeBinary as encodeBinary_148, decodeBinary as decodeBinary_148 } from "../../messages/api/GetPumpFunNewAmmPoolStreamResponse";
import { Type as GetPumpFunAMMSwapStreamRequest, encodeBinary as encodeBinary_149, decodeBinary as decodeBinary_149 } from "../../messages/api/GetPumpFunAMMSwapStreamRequest";
import { Type as GetPumpFunAMMSwapStreamResponse, encodeBinary as encodeBinary_150, decodeBinary as decodeBinary_150 } from "../../messages/api/GetPumpFunAMMSwapStreamResponse";
import { Type as PostPumpFunSwapRequest, encodeBinary as encodeBinary_151, decodeBinary as decodeBinary_151 } from "../../messages/api/PostPumpFunSwapRequest";
import { Type as PostPumpFunSwapResponse, encodeBinary as encodeBinary_152, decodeBinary as decodeBinary_152 } from "../../messages/api/PostPumpFunSwapResponse";
import { Type as PostPumpFunSwapRequestSol, encodeBinary as encodeBinary_153, decodeBinary as decodeBinary_153 } from "../../messages/api/PostPumpFunSwapRequestSol";
import { Type as GetLeaderScheduleRequest, encodeBinary as encodeBinary_154, decodeBinary as decodeBinary_154 } from "../../messages/api/GetLeaderScheduleRequest";
import { Type as GetLeaderScheduleResponse, encodeBinary as encodeBinary_155, decodeBinary as decodeBinary_155 } from "../../messages/api/GetLeaderScheduleResponse";
export interface Service<TReqArgs extends any[] = [], TResArgs extends any[] = []> {
    getRateLimit(request: GetRateLimitRequest, ...args: TReqArgs): RpcReturnType<Promise<GetRateLimitResponse>, TResArgs>;
    getTransaction(request: GetTransactionRequest, ...args: TReqArgs): RpcReturnType<Promise<GetTransactionResponse>, TResArgs>;
    postSubmitV2(request: PostSubmitRequest, ...args: TReqArgs): RpcReturnType<Promise<PostSubmitResponse>, TResArgs>;
    postSubmitBatchV2(request: PostSubmitBatchRequest, ...args: TReqArgs): RpcReturnType<Promise<PostSubmitBatchResponse>, TResArgs>;
    postSubmitSnipeV2(request: PostSubmitSnipeRequest, ...args: TReqArgs): RpcReturnType<Promise<PostSubmitSnipeResponse>, TResArgs>;
    postSubmitPaladinV2(request: PostSubmitPaladinRequest, ...args: TReqArgs): RpcReturnType<Promise<PostSubmitResponse>, TResArgs>;
    getRaydiumPools(request: GetRaydiumPoolsRequest, ...args: TReqArgs): RpcReturnType<Promise<GetRaydiumPoolsResponse>, TResArgs>;
    getRaydiumPoolReserve(request: GetRaydiumPoolReserveRequest, ...args: TReqArgs): RpcReturnType<Promise<GetRaydiumPoolReserveResponse>, TResArgs>;
    getRaydiumQuotes(request: GetRaydiumQuotesRequest, ...args: TReqArgs): RpcReturnType<Promise<GetRaydiumQuotesResponse>, TResArgs>;
    getPumpFunQuotes(request: GetPumpFunQuotesRequest, ...args: TReqArgs): RpcReturnType<Promise<GetPumpFunQuotesResponse>, TResArgs>;
    getRaydiumCPMMQuotes(request: GetRaydiumCPMMQuotesRequest, ...args: TReqArgs): RpcReturnType<Promise<GetRaydiumCPMMQuotesResponse>, TResArgs>;
    getRaydiumPrices(request: GetRaydiumPricesRequest, ...args: TReqArgs): RpcReturnType<Promise<GetRaydiumPricesResponse>, TResArgs>;
    getRaydiumCLMMQuotes(request: GetRaydiumCLMMQuotesRequest, ...args: TReqArgs): RpcReturnType<Promise<GetRaydiumCLMMQuotesResponse>, TResArgs>;
    getRaydiumCLMMPools(request: GetRaydiumCLMMPoolsRequest, ...args: TReqArgs): RpcReturnType<Promise<GetRaydiumCLMMPoolsResponse>, TResArgs>;
    postRaydiumCLMMSwap(request: PostRaydiumSwapRequest, ...args: TReqArgs): RpcReturnType<Promise<PostRaydiumSwapResponse>, TResArgs>;
    postRaydiumCLMMRouteSwap(request: PostRaydiumRouteSwapRequest, ...args: TReqArgs): RpcReturnType<Promise<PostRaydiumRouteSwapResponse>, TResArgs>;
    postRaydiumSwap(request: PostRaydiumSwapRequest, ...args: TReqArgs): RpcReturnType<Promise<PostRaydiumSwapResponse>, TResArgs>;
    postRaydiumRouteSwap(request: PostRaydiumRouteSwapRequest, ...args: TReqArgs): RpcReturnType<Promise<PostRaydiumRouteSwapResponse>, TResArgs>;
    postRaydiumCPMMSwap(request: PostRaydiumCPMMSwapRequest, ...args: TReqArgs): RpcReturnType<Promise<PostRaydiumCPMMSwapResponse>, TResArgs>;
    getJupiterQuotes(request: GetJupiterQuotesRequest, ...args: TReqArgs): RpcReturnType<Promise<GetJupiterQuotesResponse>, TResArgs>;
    getJupiterPrices(request: GetJupiterPricesRequest, ...args: TReqArgs): RpcReturnType<Promise<GetJupiterPricesResponse>, TResArgs>;
    postJupiterSwap(request: PostJupiterSwapRequest, ...args: TReqArgs): RpcReturnType<Promise<PostJupiterSwapResponse>, TResArgs>;
    postRaydiumSwapInstructions(request: PostRaydiumSwapInstructionsRequest, ...args: TReqArgs): RpcReturnType<Promise<PostRaydiumSwapInstructionsResponse>, TResArgs>;
    postJupiterSwapInstructions(request: PostJupiterSwapInstructionsRequest, ...args: TReqArgs): RpcReturnType<Promise<PostJupiterSwapInstructionsResponse>, TResArgs>;
    postJupiterRouteSwap(request: PostJupiterRouteSwapRequest, ...args: TReqArgs): RpcReturnType<Promise<PostJupiterRouteSwapResponse>, TResArgs>;
    getMarketsV2(request: GetMarketsRequestV2, ...args: TReqArgs): RpcReturnType<Promise<GetMarketsResponseV2>, TResArgs>;
    getTickersV2(request: GetTickersRequestV2, ...args: TReqArgs): RpcReturnType<Promise<GetTickersResponseV2>, TResArgs>;
    getOrderbookV2(request: GetOrderbookRequestV2, ...args: TReqArgs): RpcReturnType<Promise<GetOrderbookResponseV2>, TResArgs>;
    getMarketDepthV2(request: GetMarketDepthRequestV2, ...args: TReqArgs): RpcReturnType<Promise<GetMarketDepthResponseV2>, TResArgs>;
    postOrderV2(request: PostOrderRequestV2, ...args: TReqArgs): RpcReturnType<Promise<PostOrderResponse>, TResArgs>;
    postCancelOrderV2(request: PostCancelOrderRequestV2, ...args: TReqArgs): RpcReturnType<Promise<PostCancelOrderResponseV2>, TResArgs>;
    postReplaceOrderV2(request: PostReplaceOrderRequestV2, ...args: TReqArgs): RpcReturnType<Promise<PostOrderResponse>, TResArgs>;
    postZetaCrossMarginAccount(request: PostZetaCrossMarginAccountRequest, ...args: TReqArgs): RpcReturnType<Promise<PostZetaCrossMarginAccountResponse>, TResArgs>;
    postSettleV2(request: PostSettleRequestV2, ...args: TReqArgs): RpcReturnType<Promise<PostSettleResponse>, TResArgs>;
    getOpenOrdersV2(request: GetOpenOrdersRequestV2, ...args: TReqArgs): RpcReturnType<Promise<GetOpenOrdersResponseV2>, TResArgs>;
    getUnsettledV2(request: GetUnsettledRequestV2, ...args: TReqArgs): RpcReturnType<Promise<GetUnsettledResponse>, TResArgs>;
    getPrice(request: GetPriceRequest, ...args: TReqArgs): RpcReturnType<Promise<GetPriceResponse>, TResArgs>;
    getMarkets(request: GetMarketsRequest, ...args: TReqArgs): RpcReturnType<Promise<GetMarketsResponse>, TResArgs>;
    getPools(request: GetPoolsRequest, ...args: TReqArgs): RpcReturnType<Promise<GetPoolsResponse>, TResArgs>;
    getTickers(request: GetTickersRequest, ...args: TReqArgs): RpcReturnType<Promise<GetTickersResponse>, TResArgs>;
    getKline(request: GetKlineRequest, ...args: TReqArgs): RpcReturnType<Promise<GetKlineResponse>, TResArgs>;
    getOrderbook(request: GetOrderbookRequest, ...args: TReqArgs): RpcReturnType<Promise<GetOrderbookResponse>, TResArgs>;
    getMarketDepth(request: GetMarketDepthRequest, ...args: TReqArgs): RpcReturnType<Promise<GetMarketDepthResponse>, TResArgs>;
    getTrades(request: GetTradesRequest, ...args: TReqArgs): RpcReturnType<Promise<GetTradesResponse>, TResArgs>;
    getQuotes(request: GetQuotesRequest, ...args: TReqArgs): RpcReturnType<Promise<GetQuotesResponse>, TResArgs>;
    getServerTime(request: GetServerTimeRequest, ...args: TReqArgs): RpcReturnType<Promise<GetServerTimeResponse>, TResArgs>;
    getRecentBlockHash(request: GetRecentBlockHashRequest, ...args: TReqArgs): RpcReturnType<Promise<GetRecentBlockHashResponse>, TResArgs>;
    getRecentBlockHashV2(request: GetRecentBlockHashRequestV2, ...args: TReqArgs): RpcReturnType<Promise<GetRecentBlockHashResponseV2>, TResArgs>;
    getPriorityFee(request: GetPriorityFeeRequest, ...args: TReqArgs): RpcReturnType<Promise<GetPriorityFeeResponse>, TResArgs>;
    getPriorityFeeByProgram(request: GetPriorityFeeByProgramRequest, ...args: TReqArgs): RpcReturnType<Promise<GetPriorityFeeByProgramResponse>, TResArgs>;
    getAccountBalance(request: GetAccountBalanceRequest, ...args: TReqArgs): RpcReturnType<Promise<GetAccountBalanceResponse>, TResArgs>;
    getTokenAccounts(request: GetTokenAccountsRequest, ...args: TReqArgs): RpcReturnType<Promise<GetTokenAccountsResponse>, TResArgs>;
    getAccountBalanceV2(request: GetAccountBalanceRequest, ...args: TReqArgs): RpcReturnType<Promise<GetAccountBalanceResponse>, TResArgs>;
    postOrder(request: PostOrderRequest, ...args: TReqArgs): RpcReturnType<Promise<PostOrderResponse>, TResArgs>;
    postSubmit(request: PostSubmitRequest, ...args: TReqArgs): RpcReturnType<Promise<PostSubmitResponse>, TResArgs>;
    postSubmitBatch(request: PostSubmitBatchRequest, ...args: TReqArgs): RpcReturnType<Promise<PostSubmitBatchResponse>, TResArgs>;
    postCancelOrder(request: PostCancelOrderRequest, ...args: TReqArgs): RpcReturnType<Promise<PostCancelOrderResponse>, TResArgs>;
    postCancelByClientOrderID(request: PostCancelByClientOrderIDRequest, ...args: TReqArgs): RpcReturnType<Promise<PostCancelOrderResponse>, TResArgs>;
    postCancelAll(request: PostCancelAllRequest, ...args: TReqArgs): RpcReturnType<Promise<PostCancelAllResponse>, TResArgs>;
    postReplaceByClientOrderID(request: PostOrderRequest, ...args: TReqArgs): RpcReturnType<Promise<PostOrderResponse>, TResArgs>;
    postReplaceOrder(request: PostReplaceOrderRequest, ...args: TReqArgs): RpcReturnType<Promise<PostOrderResponse>, TResArgs>;
    postSettle(request: PostSettleRequest, ...args: TReqArgs): RpcReturnType<Promise<PostSettleResponse>, TResArgs>;
    postTradeSwap(request: TradeSwapRequest, ...args: TReqArgs): RpcReturnType<Promise<TradeSwapResponse>, TResArgs>;
    getOrders(request: GetOrdersRequest, ...args: TReqArgs): RpcReturnType<Promise<GetOrdersResponse>, TResArgs>;
    getOpenOrders(request: GetOpenOrdersRequest, ...args: TReqArgs): RpcReturnType<Promise<GetOpenOrdersResponse>, TResArgs>;
    getOrderByID(request: GetOrderByIDRequest, ...args: TReqArgs): RpcReturnType<Promise<GetOrderByIDResponse>, TResArgs>;
    getUnsettled(request: GetUnsettledRequest, ...args: TReqArgs): RpcReturnType<Promise<GetUnsettledResponse>, TResArgs>;
    postRouteTradeSwap(request: RouteTradeSwapRequest, ...args: TReqArgs): RpcReturnType<Promise<TradeSwapResponse>, TResArgs>;
    getOrderbooksStream(request: GetOrderbooksRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetOrderbooksStreamResponse>, TResArgs>;
    getMarketDepthsStream(request: GetMarketDepthsRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetMarketDepthsStreamResponse>, TResArgs>;
    getTickersStream(request: GetTickersStreamRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetTickersStreamResponse>, TResArgs>;
    getZetaTransactionStream(request: GetZetaTransactionStreamRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetZetaTransactionStreamResponse>, TResArgs>;
    getTradesStream(request: GetTradesRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetTradesStreamResponse>, TResArgs>;
    getOrderStatusStream(request: GetOrderStatusStreamRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetOrderStatusStreamResponse>, TResArgs>;
    getRecentBlockHashStream(request: GetRecentBlockHashRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetRecentBlockHashResponse>, TResArgs>;
    getBlockStream(request: GetBlockStreamRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetBlockStreamResponse>, TResArgs>;
    getPriorityFeeStream(request: GetPriorityFeeRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetPriorityFeeResponse>, TResArgs>;
    getPriorityFeeByProgramStream(request: GetPriorityFeeByProgramRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetPriorityFeeByProgramResponse>, TResArgs>;
    getBundleTipStream(request: GetBundleTipRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetBundleTipResponse>, TResArgs>;
    getQuotesStream(request: GetQuotesStreamRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetQuotesStreamResponse>, TResArgs>;
    getPoolReservesStream(request: GetPoolReservesStreamRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetPoolReservesStreamResponse>, TResArgs>;
    getPricesStream(request: GetPricesStreamRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetPricesStreamResponse>, TResArgs>;
    getNewRaydiumPoolsStream(request: GetNewRaydiumPoolsRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetNewRaydiumPoolsResponse>, TResArgs>;
    getNewRaydiumPoolsByTransactionStream(request: GetNewRaydiumPoolsByTransactionRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetNewRaydiumPoolsByTransactionResponse>, TResArgs>;
    getSwapsStream(request: GetSwapsStreamRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetSwapsStreamResponse>, TResArgs>;
    getPumpFunSwapsStream(request: GetPumpFunSwapsStreamRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetPumpFunSwapsStreamResponse>, TResArgs>;
    getPumpFunNewTokensStream(request: GetPumpFunNewTokensStreamRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetPumpFunNewTokensStreamResponse>, TResArgs>;
    getPumpFunNewAmmPoolStream(request: GetPumpFunNewAmmPoolStreamRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetPumpFunNewAmmPoolStreamResponse>, TResArgs>;
    getPumpFunAMMSwapStream(request: GetPumpFunAMMSwapStreamRequest, ...args: TReqArgs): RpcReturnType<AsyncGenerator<GetPumpFunAMMSwapStreamResponse>, TResArgs>;
    postPumpFunSwap(request: PostPumpFunSwapRequest, ...args: TReqArgs): RpcReturnType<Promise<PostPumpFunSwapResponse>, TResArgs>;
    postPumpFunSwapSol(request: PostPumpFunSwapRequestSol, ...args: TReqArgs): RpcReturnType<Promise<PostPumpFunSwapResponse>, TResArgs>;
    getLeaderSchedule(request: GetLeaderScheduleRequest, ...args: TReqArgs): RpcReturnType<Promise<GetLeaderScheduleResponse>, TResArgs>;
}
export declare type MethodDescriptors = typeof methodDescriptors;
export declare const methodDescriptors: {
    readonly getRateLimit: {
        readonly methodName: "GetRateLimit";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary;
            readonly deserializeBinary: typeof decodeBinary;
            readonly serializeJson: (value: GetRateLimitRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_1;
            readonly deserializeBinary: typeof decodeBinary_1;
            readonly serializeJson: (value: GetRateLimitResponse) => string;
        };
    };
    readonly getTransaction: {
        readonly methodName: "GetTransaction";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_2;
            readonly deserializeBinary: typeof decodeBinary_2;
            readonly serializeJson: (value: GetTransactionRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_3;
            readonly deserializeBinary: typeof decodeBinary_3;
            readonly serializeJson: (value: GetTransactionResponse) => string;
        };
    };
    readonly postSubmitV2: {
        readonly methodName: "PostSubmitV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_4;
            readonly deserializeBinary: typeof decodeBinary_4;
            readonly serializeJson: (value: PostSubmitRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_5;
            readonly deserializeBinary: typeof decodeBinary_5;
            readonly serializeJson: (value: PostSubmitResponse) => string;
        };
    };
    readonly postSubmitBatchV2: {
        readonly methodName: "PostSubmitBatchV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_6;
            readonly deserializeBinary: typeof decodeBinary_6;
            readonly serializeJson: (value: PostSubmitBatchRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_7;
            readonly deserializeBinary: typeof decodeBinary_7;
            readonly serializeJson: (value: PostSubmitBatchResponse) => string;
        };
    };
    readonly postSubmitSnipeV2: {
        readonly methodName: "PostSubmitSnipeV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_8;
            readonly deserializeBinary: typeof decodeBinary_8;
            readonly serializeJson: (value: PostSubmitSnipeRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_9;
            readonly deserializeBinary: typeof decodeBinary_9;
            readonly serializeJson: (value: PostSubmitSnipeResponse) => string;
        };
    };
    readonly postSubmitPaladinV2: {
        readonly methodName: "PostSubmitPaladinV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_10;
            readonly deserializeBinary: typeof decodeBinary_10;
            readonly serializeJson: (value: PostSubmitPaladinRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_5;
            readonly deserializeBinary: typeof decodeBinary_5;
            readonly serializeJson: (value: PostSubmitResponse) => string;
        };
    };
    readonly getRaydiumPools: {
        readonly methodName: "GetRaydiumPools";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_11;
            readonly deserializeBinary: typeof decodeBinary_11;
            readonly serializeJson: (value: GetRaydiumPoolsRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_12;
            readonly deserializeBinary: typeof decodeBinary_12;
            readonly serializeJson: (value: GetRaydiumPoolsResponse) => string;
        };
    };
    readonly getRaydiumPoolReserve: {
        readonly methodName: "GetRaydiumPoolReserve";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_13;
            readonly deserializeBinary: typeof decodeBinary_13;
            readonly serializeJson: (value: GetRaydiumPoolReserveRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_14;
            readonly deserializeBinary: typeof decodeBinary_14;
            readonly serializeJson: (value: GetRaydiumPoolReserveResponse) => string;
        };
    };
    readonly getRaydiumQuotes: {
        readonly methodName: "GetRaydiumQuotes";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_15;
            readonly deserializeBinary: typeof decodeBinary_15;
            readonly serializeJson: (value: GetRaydiumQuotesRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_16;
            readonly deserializeBinary: typeof decodeBinary_16;
            readonly serializeJson: (value: GetRaydiumQuotesResponse) => string;
        };
    };
    readonly getPumpFunQuotes: {
        readonly methodName: "GetPumpFunQuotes";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_17;
            readonly deserializeBinary: typeof decodeBinary_17;
            readonly serializeJson: (value: GetPumpFunQuotesRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_18;
            readonly deserializeBinary: typeof decodeBinary_18;
            readonly serializeJson: (value: GetPumpFunQuotesResponse) => string;
        };
    };
    readonly getRaydiumCPMMQuotes: {
        readonly methodName: "GetRaydiumCPMMQuotes";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_19;
            readonly deserializeBinary: typeof decodeBinary_19;
            readonly serializeJson: (value: GetRaydiumCPMMQuotesRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_20;
            readonly deserializeBinary: typeof decodeBinary_20;
            readonly serializeJson: (value: GetRaydiumCPMMQuotesResponse) => string;
        };
    };
    readonly getRaydiumPrices: {
        readonly methodName: "GetRaydiumPrices";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_21;
            readonly deserializeBinary: typeof decodeBinary_21;
            readonly serializeJson: (value: GetRaydiumPricesRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_22;
            readonly deserializeBinary: typeof decodeBinary_22;
            readonly serializeJson: (value: GetRaydiumPricesResponse) => string;
        };
    };
    readonly getRaydiumCLMMQuotes: {
        readonly methodName: "GetRaydiumCLMMQuotes";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_23;
            readonly deserializeBinary: typeof decodeBinary_23;
            readonly serializeJson: (value: GetRaydiumCLMMQuotesRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_24;
            readonly deserializeBinary: typeof decodeBinary_24;
            readonly serializeJson: (value: GetRaydiumCLMMQuotesResponse) => string;
        };
    };
    readonly getRaydiumCLMMPools: {
        readonly methodName: "GetRaydiumCLMMPools";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_25;
            readonly deserializeBinary: typeof decodeBinary_25;
            readonly serializeJson: (value: GetRaydiumCLMMPoolsRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_26;
            readonly deserializeBinary: typeof decodeBinary_26;
            readonly serializeJson: (value: GetRaydiumCLMMPoolsResponse) => string;
        };
    };
    readonly postRaydiumCLMMSwap: {
        readonly methodName: "PostRaydiumCLMMSwap";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_27;
            readonly deserializeBinary: typeof decodeBinary_27;
            readonly serializeJson: (value: PostRaydiumSwapRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_28;
            readonly deserializeBinary: typeof decodeBinary_28;
            readonly serializeJson: (value: PostRaydiumSwapResponse) => string;
        };
    };
    readonly postRaydiumCLMMRouteSwap: {
        readonly methodName: "PostRaydiumCLMMRouteSwap";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_29;
            readonly deserializeBinary: typeof decodeBinary_29;
            readonly serializeJson: (value: PostRaydiumRouteSwapRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_30;
            readonly deserializeBinary: typeof decodeBinary_30;
            readonly serializeJson: (value: PostRaydiumRouteSwapResponse) => string;
        };
    };
    readonly postRaydiumSwap: {
        readonly methodName: "PostRaydiumSwap";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_27;
            readonly deserializeBinary: typeof decodeBinary_27;
            readonly serializeJson: (value: PostRaydiumSwapRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_28;
            readonly deserializeBinary: typeof decodeBinary_28;
            readonly serializeJson: (value: PostRaydiumSwapResponse) => string;
        };
    };
    readonly postRaydiumRouteSwap: {
        readonly methodName: "PostRaydiumRouteSwap";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_29;
            readonly deserializeBinary: typeof decodeBinary_29;
            readonly serializeJson: (value: PostRaydiumRouteSwapRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_30;
            readonly deserializeBinary: typeof decodeBinary_30;
            readonly serializeJson: (value: PostRaydiumRouteSwapResponse) => string;
        };
    };
    readonly postRaydiumCPMMSwap: {
        readonly methodName: "PostRaydiumCPMMSwap";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_31;
            readonly deserializeBinary: typeof decodeBinary_31;
            readonly serializeJson: (value: PostRaydiumCPMMSwapRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_32;
            readonly deserializeBinary: typeof decodeBinary_32;
            readonly serializeJson: (value: PostRaydiumCPMMSwapResponse) => string;
        };
    };
    readonly getJupiterQuotes: {
        readonly methodName: "GetJupiterQuotes";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_33;
            readonly deserializeBinary: typeof decodeBinary_33;
            readonly serializeJson: (value: GetJupiterQuotesRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_34;
            readonly deserializeBinary: typeof decodeBinary_34;
            readonly serializeJson: (value: GetJupiterQuotesResponse) => string;
        };
    };
    readonly getJupiterPrices: {
        readonly methodName: "GetJupiterPrices";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_35;
            readonly deserializeBinary: typeof decodeBinary_35;
            readonly serializeJson: (value: GetJupiterPricesRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_36;
            readonly deserializeBinary: typeof decodeBinary_36;
            readonly serializeJson: (value: GetJupiterPricesResponse) => string;
        };
    };
    readonly postJupiterSwap: {
        readonly methodName: "PostJupiterSwap";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_37;
            readonly deserializeBinary: typeof decodeBinary_37;
            readonly serializeJson: (value: PostJupiterSwapRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_38;
            readonly deserializeBinary: typeof decodeBinary_38;
            readonly serializeJson: (value: PostJupiterSwapResponse) => string;
        };
    };
    readonly postRaydiumSwapInstructions: {
        readonly methodName: "PostRaydiumSwapInstructions";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_39;
            readonly deserializeBinary: typeof decodeBinary_39;
            readonly serializeJson: (value: PostRaydiumSwapInstructionsRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_40;
            readonly deserializeBinary: typeof decodeBinary_40;
            readonly serializeJson: (value: PostRaydiumSwapInstructionsResponse) => string;
        };
    };
    readonly postJupiterSwapInstructions: {
        readonly methodName: "PostJupiterSwapInstructions";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_41;
            readonly deserializeBinary: typeof decodeBinary_41;
            readonly serializeJson: (value: PostJupiterSwapInstructionsRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_42;
            readonly deserializeBinary: typeof decodeBinary_42;
            readonly serializeJson: (value: PostJupiterSwapInstructionsResponse) => string;
        };
    };
    readonly postJupiterRouteSwap: {
        readonly methodName: "PostJupiterRouteSwap";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_43;
            readonly deserializeBinary: typeof decodeBinary_43;
            readonly serializeJson: (value: PostJupiterRouteSwapRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_44;
            readonly deserializeBinary: typeof decodeBinary_44;
            readonly serializeJson: (value: PostJupiterRouteSwapResponse) => string;
        };
    };
    readonly getMarketsV2: {
        readonly methodName: "GetMarketsV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_45;
            readonly deserializeBinary: typeof decodeBinary_45;
            readonly serializeJson: (value: GetMarketsRequestV2) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_46;
            readonly deserializeBinary: typeof decodeBinary_46;
            readonly serializeJson: (value: GetMarketsResponseV2) => string;
        };
    };
    readonly getTickersV2: {
        readonly methodName: "GetTickersV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_47;
            readonly deserializeBinary: typeof decodeBinary_47;
            readonly serializeJson: (value: GetTickersRequestV2) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_48;
            readonly deserializeBinary: typeof decodeBinary_48;
            readonly serializeJson: (value: GetTickersResponseV2) => string;
        };
    };
    readonly getOrderbookV2: {
        readonly methodName: "GetOrderbookV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_49;
            readonly deserializeBinary: typeof decodeBinary_49;
            readonly serializeJson: (value: GetOrderbookRequestV2) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_50;
            readonly deserializeBinary: typeof decodeBinary_50;
            readonly serializeJson: (value: GetOrderbookResponseV2) => string;
        };
    };
    readonly getMarketDepthV2: {
        readonly methodName: "GetMarketDepthV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_51;
            readonly deserializeBinary: typeof decodeBinary_51;
            readonly serializeJson: (value: GetMarketDepthRequestV2) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_52;
            readonly deserializeBinary: typeof decodeBinary_52;
            readonly serializeJson: (value: GetMarketDepthResponseV2) => string;
        };
    };
    readonly postOrderV2: {
        readonly methodName: "PostOrderV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_53;
            readonly deserializeBinary: typeof decodeBinary_53;
            readonly serializeJson: (value: PostOrderRequestV2) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_54;
            readonly deserializeBinary: typeof decodeBinary_54;
            readonly serializeJson: (value: PostOrderResponse) => string;
        };
    };
    readonly postCancelOrderV2: {
        readonly methodName: "PostCancelOrderV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_55;
            readonly deserializeBinary: typeof decodeBinary_55;
            readonly serializeJson: (value: PostCancelOrderRequestV2) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_56;
            readonly deserializeBinary: typeof decodeBinary_56;
            readonly serializeJson: (value: PostCancelOrderResponseV2) => string;
        };
    };
    readonly postReplaceOrderV2: {
        readonly methodName: "PostReplaceOrderV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_57;
            readonly deserializeBinary: typeof decodeBinary_57;
            readonly serializeJson: (value: PostReplaceOrderRequestV2) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_54;
            readonly deserializeBinary: typeof decodeBinary_54;
            readonly serializeJson: (value: PostOrderResponse) => string;
        };
    };
    readonly postZetaCrossMarginAccount: {
        readonly methodName: "PostZetaCrossMarginAccount";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_58;
            readonly deserializeBinary: typeof decodeBinary_58;
            readonly serializeJson: (value: PostZetaCrossMarginAccountRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_59;
            readonly deserializeBinary: typeof decodeBinary_59;
            readonly serializeJson: (value: PostZetaCrossMarginAccountResponse) => string;
        };
    };
    readonly postSettleV2: {
        readonly methodName: "PostSettleV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_60;
            readonly deserializeBinary: typeof decodeBinary_60;
            readonly serializeJson: (value: PostSettleRequestV2) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_61;
            readonly deserializeBinary: typeof decodeBinary_61;
            readonly serializeJson: (value: PostSettleResponse) => string;
        };
    };
    readonly getOpenOrdersV2: {
        readonly methodName: "GetOpenOrdersV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_62;
            readonly deserializeBinary: typeof decodeBinary_62;
            readonly serializeJson: (value: GetOpenOrdersRequestV2) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_63;
            readonly deserializeBinary: typeof decodeBinary_63;
            readonly serializeJson: (value: GetOpenOrdersResponseV2) => string;
        };
    };
    readonly getUnsettledV2: {
        readonly methodName: "GetUnsettledV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_64;
            readonly deserializeBinary: typeof decodeBinary_64;
            readonly serializeJson: (value: GetUnsettledRequestV2) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_65;
            readonly deserializeBinary: typeof decodeBinary_65;
            readonly serializeJson: (value: GetUnsettledResponse) => string;
        };
    };
    readonly getPrice: {
        readonly methodName: "GetPrice";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_66;
            readonly deserializeBinary: typeof decodeBinary_66;
            readonly serializeJson: (value: GetPriceRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_67;
            readonly deserializeBinary: typeof decodeBinary_67;
            readonly serializeJson: (value: GetPriceResponse) => string;
        };
    };
    readonly getMarkets: {
        readonly methodName: "GetMarkets";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_68;
            readonly deserializeBinary: typeof decodeBinary_68;
            readonly serializeJson: (value: GetMarketsRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_69;
            readonly deserializeBinary: typeof decodeBinary_69;
            readonly serializeJson: (value: GetMarketsResponse) => string;
        };
    };
    readonly getPools: {
        readonly methodName: "GetPools";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_70;
            readonly deserializeBinary: typeof decodeBinary_70;
            readonly serializeJson: (value: GetPoolsRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_71;
            readonly deserializeBinary: typeof decodeBinary_71;
            readonly serializeJson: (value: GetPoolsResponse) => string;
        };
    };
    readonly getTickers: {
        readonly methodName: "GetTickers";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_72;
            readonly deserializeBinary: typeof decodeBinary_72;
            readonly serializeJson: (value: GetTickersRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_73;
            readonly deserializeBinary: typeof decodeBinary_73;
            readonly serializeJson: (value: GetTickersResponse) => string;
        };
    };
    readonly getKline: {
        readonly methodName: "GetKline";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_74;
            readonly deserializeBinary: typeof decodeBinary_74;
            readonly serializeJson: (value: GetKlineRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_75;
            readonly deserializeBinary: typeof decodeBinary_75;
            readonly serializeJson: (value: GetKlineResponse) => string;
        };
    };
    readonly getOrderbook: {
        readonly methodName: "GetOrderbook";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_76;
            readonly deserializeBinary: typeof decodeBinary_76;
            readonly serializeJson: (value: GetOrderbookRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_77;
            readonly deserializeBinary: typeof decodeBinary_77;
            readonly serializeJson: (value: GetOrderbookResponse) => string;
        };
    };
    readonly getMarketDepth: {
        readonly methodName: "GetMarketDepth";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_78;
            readonly deserializeBinary: typeof decodeBinary_78;
            readonly serializeJson: (value: GetMarketDepthRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_79;
            readonly deserializeBinary: typeof decodeBinary_79;
            readonly serializeJson: (value: GetMarketDepthResponse) => string;
        };
    };
    readonly getTrades: {
        readonly methodName: "GetTrades";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_80;
            readonly deserializeBinary: typeof decodeBinary_80;
            readonly serializeJson: (value: GetTradesRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_81;
            readonly deserializeBinary: typeof decodeBinary_81;
            readonly serializeJson: (value: GetTradesResponse) => string;
        };
    };
    readonly getQuotes: {
        readonly methodName: "GetQuotes";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_82;
            readonly deserializeBinary: typeof decodeBinary_82;
            readonly serializeJson: (value: GetQuotesRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_83;
            readonly deserializeBinary: typeof decodeBinary_83;
            readonly serializeJson: (value: GetQuotesResponse) => string;
        };
    };
    readonly getServerTime: {
        readonly methodName: "GetServerTime";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_84;
            readonly deserializeBinary: typeof decodeBinary_84;
            readonly serializeJson: (value: GetServerTimeRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_85;
            readonly deserializeBinary: typeof decodeBinary_85;
            readonly serializeJson: (value: GetServerTimeResponse) => string;
        };
    };
    readonly getRecentBlockHash: {
        readonly methodName: "GetRecentBlockHash";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_86;
            readonly deserializeBinary: typeof decodeBinary_86;
            readonly serializeJson: (value: GetRecentBlockHashRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_87;
            readonly deserializeBinary: typeof decodeBinary_87;
            readonly serializeJson: (value: GetRecentBlockHashResponse) => string;
        };
    };
    readonly getRecentBlockHashV2: {
        readonly methodName: "GetRecentBlockHashV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_88;
            readonly deserializeBinary: typeof decodeBinary_88;
            readonly serializeJson: (value: GetRecentBlockHashRequestV2) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_89;
            readonly deserializeBinary: typeof decodeBinary_89;
            readonly serializeJson: (value: GetRecentBlockHashResponseV2) => string;
        };
    };
    readonly getPriorityFee: {
        readonly methodName: "GetPriorityFee";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_90;
            readonly deserializeBinary: typeof decodeBinary_90;
            readonly serializeJson: (value: GetPriorityFeeRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_91;
            readonly deserializeBinary: typeof decodeBinary_91;
            readonly serializeJson: (value: GetPriorityFeeResponse) => string;
        };
    };
    readonly getPriorityFeeByProgram: {
        readonly methodName: "GetPriorityFeeByProgram";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_92;
            readonly deserializeBinary: typeof decodeBinary_92;
            readonly serializeJson: (value: GetPriorityFeeByProgramRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_93;
            readonly deserializeBinary: typeof decodeBinary_93;
            readonly serializeJson: (value: GetPriorityFeeByProgramResponse) => string;
        };
    };
    readonly getAccountBalance: {
        readonly methodName: "GetAccountBalance";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_94;
            readonly deserializeBinary: typeof decodeBinary_94;
            readonly serializeJson: (value: GetAccountBalanceRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_95;
            readonly deserializeBinary: typeof decodeBinary_95;
            readonly serializeJson: (value: GetAccountBalanceResponse) => string;
        };
    };
    readonly getTokenAccounts: {
        readonly methodName: "GetTokenAccounts";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_96;
            readonly deserializeBinary: typeof decodeBinary_96;
            readonly serializeJson: (value: GetTokenAccountsRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_97;
            readonly deserializeBinary: typeof decodeBinary_97;
            readonly serializeJson: (value: GetTokenAccountsResponse) => string;
        };
    };
    readonly getAccountBalanceV2: {
        readonly methodName: "GetAccountBalanceV2";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_94;
            readonly deserializeBinary: typeof decodeBinary_94;
            readonly serializeJson: (value: GetAccountBalanceRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_95;
            readonly deserializeBinary: typeof decodeBinary_95;
            readonly serializeJson: (value: GetAccountBalanceResponse) => string;
        };
    };
    readonly postOrder: {
        readonly methodName: "PostOrder";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_98;
            readonly deserializeBinary: typeof decodeBinary_98;
            readonly serializeJson: (value: PostOrderRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_54;
            readonly deserializeBinary: typeof decodeBinary_54;
            readonly serializeJson: (value: PostOrderResponse) => string;
        };
    };
    readonly postSubmit: {
        readonly methodName: "PostSubmit";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_4;
            readonly deserializeBinary: typeof decodeBinary_4;
            readonly serializeJson: (value: PostSubmitRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_5;
            readonly deserializeBinary: typeof decodeBinary_5;
            readonly serializeJson: (value: PostSubmitResponse) => string;
        };
    };
    readonly postSubmitBatch: {
        readonly methodName: "PostSubmitBatch";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_6;
            readonly deserializeBinary: typeof decodeBinary_6;
            readonly serializeJson: (value: PostSubmitBatchRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_7;
            readonly deserializeBinary: typeof decodeBinary_7;
            readonly serializeJson: (value: PostSubmitBatchResponse) => string;
        };
    };
    readonly postCancelOrder: {
        readonly methodName: "PostCancelOrder";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_99;
            readonly deserializeBinary: typeof decodeBinary_99;
            readonly serializeJson: (value: PostCancelOrderRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_100;
            readonly deserializeBinary: typeof decodeBinary_100;
            readonly serializeJson: (value: PostCancelOrderResponse) => string;
        };
    };
    readonly postCancelByClientOrderID: {
        readonly methodName: "PostCancelByClientOrderID";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_101;
            readonly deserializeBinary: typeof decodeBinary_101;
            readonly serializeJson: (value: PostCancelByClientOrderIDRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_100;
            readonly deserializeBinary: typeof decodeBinary_100;
            readonly serializeJson: (value: PostCancelOrderResponse) => string;
        };
    };
    readonly postCancelAll: {
        readonly methodName: "PostCancelAll";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_102;
            readonly deserializeBinary: typeof decodeBinary_102;
            readonly serializeJson: (value: PostCancelAllRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_103;
            readonly deserializeBinary: typeof decodeBinary_103;
            readonly serializeJson: (value: PostCancelAllResponse) => string;
        };
    };
    readonly postReplaceByClientOrderID: {
        readonly methodName: "PostReplaceByClientOrderID";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_98;
            readonly deserializeBinary: typeof decodeBinary_98;
            readonly serializeJson: (value: PostOrderRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_54;
            readonly deserializeBinary: typeof decodeBinary_54;
            readonly serializeJson: (value: PostOrderResponse) => string;
        };
    };
    readonly postReplaceOrder: {
        readonly methodName: "PostReplaceOrder";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_104;
            readonly deserializeBinary: typeof decodeBinary_104;
            readonly serializeJson: (value: PostReplaceOrderRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_54;
            readonly deserializeBinary: typeof decodeBinary_54;
            readonly serializeJson: (value: PostOrderResponse) => string;
        };
    };
    readonly postSettle: {
        readonly methodName: "PostSettle";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_105;
            readonly deserializeBinary: typeof decodeBinary_105;
            readonly serializeJson: (value: PostSettleRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_61;
            readonly deserializeBinary: typeof decodeBinary_61;
            readonly serializeJson: (value: PostSettleResponse) => string;
        };
    };
    readonly postTradeSwap: {
        readonly methodName: "PostTradeSwap";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_106;
            readonly deserializeBinary: typeof decodeBinary_106;
            readonly serializeJson: (value: TradeSwapRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_107;
            readonly deserializeBinary: typeof decodeBinary_107;
            readonly serializeJson: (value: TradeSwapResponse) => string;
        };
    };
    readonly getOrders: {
        readonly methodName: "GetOrders";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_108;
            readonly deserializeBinary: typeof decodeBinary_108;
            readonly serializeJson: (value: GetOrdersRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_109;
            readonly deserializeBinary: typeof decodeBinary_109;
            readonly serializeJson: (value: GetOrdersResponse) => string;
        };
    };
    readonly getOpenOrders: {
        readonly methodName: "GetOpenOrders";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_110;
            readonly deserializeBinary: typeof decodeBinary_110;
            readonly serializeJson: (value: GetOpenOrdersRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_111;
            readonly deserializeBinary: typeof decodeBinary_111;
            readonly serializeJson: (value: GetOpenOrdersResponse) => string;
        };
    };
    readonly getOrderByID: {
        readonly methodName: "GetOrderByID";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_112;
            readonly deserializeBinary: typeof decodeBinary_112;
            readonly serializeJson: (value: GetOrderByIDRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_113;
            readonly deserializeBinary: typeof decodeBinary_113;
            readonly serializeJson: (value: GetOrderByIDResponse) => string;
        };
    };
    readonly getUnsettled: {
        readonly methodName: "GetUnsettled";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_114;
            readonly deserializeBinary: typeof decodeBinary_114;
            readonly serializeJson: (value: GetUnsettledRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_65;
            readonly deserializeBinary: typeof decodeBinary_65;
            readonly serializeJson: (value: GetUnsettledResponse) => string;
        };
    };
    readonly postRouteTradeSwap: {
        readonly methodName: "PostRouteTradeSwap";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_115;
            readonly deserializeBinary: typeof decodeBinary_115;
            readonly serializeJson: (value: RouteTradeSwapRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_107;
            readonly deserializeBinary: typeof decodeBinary_107;
            readonly serializeJson: (value: TradeSwapResponse) => string;
        };
    };
    readonly getOrderbooksStream: {
        readonly methodName: "GetOrderbooksStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_116;
            readonly deserializeBinary: typeof decodeBinary_116;
            readonly serializeJson: (value: GetOrderbooksRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_117;
            readonly deserializeBinary: typeof decodeBinary_117;
            readonly serializeJson: (value: GetOrderbooksStreamResponse) => string;
        };
    };
    readonly getMarketDepthsStream: {
        readonly methodName: "GetMarketDepthsStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_118;
            readonly deserializeBinary: typeof decodeBinary_118;
            readonly serializeJson: (value: GetMarketDepthsRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_119;
            readonly deserializeBinary: typeof decodeBinary_119;
            readonly serializeJson: (value: GetMarketDepthsStreamResponse) => string;
        };
    };
    readonly getTickersStream: {
        readonly methodName: "GetTickersStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_120;
            readonly deserializeBinary: typeof decodeBinary_120;
            readonly serializeJson: (value: GetTickersStreamRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_121;
            readonly deserializeBinary: typeof decodeBinary_121;
            readonly serializeJson: (value: GetTickersStreamResponse) => string;
        };
    };
    readonly getZetaTransactionStream: {
        readonly methodName: "GetZetaTransactionStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_122;
            readonly deserializeBinary: typeof decodeBinary_122;
            readonly serializeJson: (value: GetZetaTransactionStreamRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_123;
            readonly deserializeBinary: typeof decodeBinary_123;
            readonly serializeJson: (value: GetZetaTransactionStreamResponse) => string;
        };
    };
    readonly getTradesStream: {
        readonly methodName: "GetTradesStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_80;
            readonly deserializeBinary: typeof decodeBinary_80;
            readonly serializeJson: (value: GetTradesRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_124;
            readonly deserializeBinary: typeof decodeBinary_124;
            readonly serializeJson: (value: GetTradesStreamResponse) => string;
        };
    };
    readonly getOrderStatusStream: {
        readonly methodName: "GetOrderStatusStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_125;
            readonly deserializeBinary: typeof decodeBinary_125;
            readonly serializeJson: (value: GetOrderStatusStreamRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_126;
            readonly deserializeBinary: typeof decodeBinary_126;
            readonly serializeJson: (value: GetOrderStatusStreamResponse) => string;
        };
    };
    readonly getRecentBlockHashStream: {
        readonly methodName: "GetRecentBlockHashStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_86;
            readonly deserializeBinary: typeof decodeBinary_86;
            readonly serializeJson: (value: GetRecentBlockHashRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_87;
            readonly deserializeBinary: typeof decodeBinary_87;
            readonly serializeJson: (value: GetRecentBlockHashResponse) => string;
        };
    };
    readonly getBlockStream: {
        readonly methodName: "GetBlockStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_127;
            readonly deserializeBinary: typeof decodeBinary_127;
            readonly serializeJson: (value: GetBlockStreamRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_128;
            readonly deserializeBinary: typeof decodeBinary_128;
            readonly serializeJson: (value: GetBlockStreamResponse) => string;
        };
    };
    readonly getPriorityFeeStream: {
        readonly methodName: "GetPriorityFeeStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_90;
            readonly deserializeBinary: typeof decodeBinary_90;
            readonly serializeJson: (value: GetPriorityFeeRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_91;
            readonly deserializeBinary: typeof decodeBinary_91;
            readonly serializeJson: (value: GetPriorityFeeResponse) => string;
        };
    };
    readonly getPriorityFeeByProgramStream: {
        readonly methodName: "GetPriorityFeeByProgramStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_92;
            readonly deserializeBinary: typeof decodeBinary_92;
            readonly serializeJson: (value: GetPriorityFeeByProgramRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_93;
            readonly deserializeBinary: typeof decodeBinary_93;
            readonly serializeJson: (value: GetPriorityFeeByProgramResponse) => string;
        };
    };
    readonly getBundleTipStream: {
        readonly methodName: "GetBundleTipStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_129;
            readonly deserializeBinary: typeof decodeBinary_129;
            readonly serializeJson: (value: GetBundleTipRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_130;
            readonly deserializeBinary: typeof decodeBinary_130;
            readonly serializeJson: (value: GetBundleTipResponse) => string;
        };
    };
    readonly getQuotesStream: {
        readonly methodName: "GetQuotesStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_131;
            readonly deserializeBinary: typeof decodeBinary_131;
            readonly serializeJson: (value: GetQuotesStreamRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_132;
            readonly deserializeBinary: typeof decodeBinary_132;
            readonly serializeJson: (value: GetQuotesStreamResponse) => string;
        };
    };
    readonly getPoolReservesStream: {
        readonly methodName: "GetPoolReservesStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_133;
            readonly deserializeBinary: typeof decodeBinary_133;
            readonly serializeJson: (value: GetPoolReservesStreamRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_134;
            readonly deserializeBinary: typeof decodeBinary_134;
            readonly serializeJson: (value: GetPoolReservesStreamResponse) => string;
        };
    };
    readonly getPricesStream: {
        readonly methodName: "GetPricesStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_135;
            readonly deserializeBinary: typeof decodeBinary_135;
            readonly serializeJson: (value: GetPricesStreamRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_136;
            readonly deserializeBinary: typeof decodeBinary_136;
            readonly serializeJson: (value: GetPricesStreamResponse) => string;
        };
    };
    readonly getNewRaydiumPoolsStream: {
        readonly methodName: "GetNewRaydiumPoolsStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_137;
            readonly deserializeBinary: typeof decodeBinary_137;
            readonly serializeJson: (value: GetNewRaydiumPoolsRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_138;
            readonly deserializeBinary: typeof decodeBinary_138;
            readonly serializeJson: (value: GetNewRaydiumPoolsResponse) => string;
        };
    };
    readonly getNewRaydiumPoolsByTransactionStream: {
        readonly methodName: "GetNewRaydiumPoolsByTransactionStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_139;
            readonly deserializeBinary: typeof decodeBinary_139;
            readonly serializeJson: (value: GetNewRaydiumPoolsByTransactionRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_140;
            readonly deserializeBinary: typeof decodeBinary_140;
            readonly serializeJson: (value: GetNewRaydiumPoolsByTransactionResponse) => string;
        };
    };
    readonly getSwapsStream: {
        readonly methodName: "GetSwapsStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_141;
            readonly deserializeBinary: typeof decodeBinary_141;
            readonly serializeJson: (value: GetSwapsStreamRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_142;
            readonly deserializeBinary: typeof decodeBinary_142;
            readonly serializeJson: (value: GetSwapsStreamResponse) => string;
        };
    };
    readonly getPumpFunSwapsStream: {
        readonly methodName: "GetPumpFunSwapsStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_143;
            readonly deserializeBinary: typeof decodeBinary_143;
            readonly serializeJson: (value: GetPumpFunSwapsStreamRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_144;
            readonly deserializeBinary: typeof decodeBinary_144;
            readonly serializeJson: (value: GetPumpFunSwapsStreamResponse) => string;
        };
    };
    readonly getPumpFunNewTokensStream: {
        readonly methodName: "GetPumpFunNewTokensStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_145;
            readonly deserializeBinary: typeof decodeBinary_145;
            readonly serializeJson: (value: GetPumpFunNewTokensStreamRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_146;
            readonly deserializeBinary: typeof decodeBinary_146;
            readonly serializeJson: (value: GetPumpFunNewTokensStreamResponse) => string;
        };
    };
    readonly getPumpFunNewAmmPoolStream: {
        readonly methodName: "GetPumpFunNewAmmPoolStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_147;
            readonly deserializeBinary: typeof decodeBinary_147;
            readonly serializeJson: (value: GetPumpFunNewAmmPoolStreamRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_148;
            readonly deserializeBinary: typeof decodeBinary_148;
            readonly serializeJson: (value: GetPumpFunNewAmmPoolStreamResponse) => string;
        };
    };
    readonly getPumpFunAMMSwapStream: {
        readonly methodName: "GetPumpFunAMMSwapStream";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: true;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_149;
            readonly deserializeBinary: typeof decodeBinary_149;
            readonly serializeJson: (value: GetPumpFunAMMSwapStreamRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_150;
            readonly deserializeBinary: typeof decodeBinary_150;
            readonly serializeJson: (value: GetPumpFunAMMSwapStreamResponse) => string;
        };
    };
    readonly postPumpFunSwap: {
        readonly methodName: "PostPumpFunSwap";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_151;
            readonly deserializeBinary: typeof decodeBinary_151;
            readonly serializeJson: (value: PostPumpFunSwapRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_152;
            readonly deserializeBinary: typeof decodeBinary_152;
            readonly serializeJson: (value: PostPumpFunSwapResponse) => string;
        };
    };
    readonly postPumpFunSwapSol: {
        readonly methodName: "PostPumpFunSwapSol";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_153;
            readonly deserializeBinary: typeof decodeBinary_153;
            readonly serializeJson: (value: PostPumpFunSwapRequestSol) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_152;
            readonly deserializeBinary: typeof decodeBinary_152;
            readonly serializeJson: (value: PostPumpFunSwapResponse) => string;
        };
    };
    readonly getLeaderSchedule: {
        readonly methodName: "GetLeaderSchedule";
        readonly service: {
            readonly serviceName: "api.Api";
        };
        readonly requestStream: false;
        readonly responseStream: false;
        readonly requestType: {
            readonly serializeBinary: typeof encodeBinary_154;
            readonly deserializeBinary: typeof decodeBinary_154;
            readonly serializeJson: (value: GetLeaderScheduleRequest) => string;
        };
        readonly responseType: {
            readonly serializeBinary: typeof encodeBinary_155;
            readonly deserializeBinary: typeof decodeBinary_155;
            readonly serializeJson: (value: GetLeaderScheduleResponse) => string;
        };
    };
};
export declare class RpcError<TTrailer = any> extends Error {
    trailer: TTrailer;
    constructor(trailer: TTrailer);
}
export interface CreateServiceClientConfig {
    responseOnly?: boolean;
    devtools?: true | {
        tags: string[];
    };
}
export declare function createServiceClient<TMetadata, THeader, TTrailer>(rpcClientImpl: RpcClientImpl<TMetadata, THeader, TTrailer>, config?: undefined): Service<[] | [TMetadata], []>;
export declare function createServiceClient<TMetadata, THeader, TTrailer>(rpcClientImpl: RpcClientImpl<TMetadata, THeader, TTrailer>, config: CreateServiceClientConfig & {
    responseOnly: false;
}): Service<[] | [TMetadata], [THeader, Promise<TTrailer>]>;
export declare function createServiceClient<TMetadata, THeader, TTrailer>(rpcClientImpl: RpcClientImpl<TMetadata, THeader, TTrailer>, config: CreateServiceClientConfig & {
    responseOnly?: true;
}): Service<[] | [TMetadata], []>;
//# sourceMappingURL=Api.d.ts.map