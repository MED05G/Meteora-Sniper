"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const async_cancellable_1 = require("@matrixai/async-cancellable");
const Lock_1 = __importDefault(require("./Lock"));
class Barrier {
    lock;
    _count;
    release;
    static async createBarrier(count) {
        const lock = new Lock_1.default();
        const [release] = await lock.lock()();
        return new this(count, lock, release);
    }
    constructor(count, lock, release) {
        if (count < 0) {
            throw new RangeError('Barrier must be constructed with `count` >= than 0');
        }
        this.lock = lock;
        this.release = release;
        this._count = count;
    }
    get count() {
        return this._count;
    }
    async destroy() {
        await this.release();
    }
    wait(ctx) {
        if (!this.lock.isLocked()) {
            return async_cancellable_1.PromiseCancellable.resolve();
        }
        this._count = Math.max(this._count - 1, 0);
        if (this._count === 0) {
            return async_cancellable_1.PromiseCancellable.from(this.release());
        }
        else {
            return this.lock.waitForUnlock(ctx);
        }
    }
}
exports.default = Barrier;
//# sourceMappingURL=Barrier.js.map