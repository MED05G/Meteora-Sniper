import type { LogFormatter } from './types';
declare const level: unique symbol;
declare const key: unique symbol;
declare const keys: unique symbol;
declare const date: unique symbol;
declare const msg: unique symbol;
declare const stack: unique symbol;
declare const data: unique symbol;
declare function format(strings: TemplateStringsArray, ...values: Array<any>): LogFormatter;
/**
 * Default formatter
 * This only shows the level, key and msg
 */
declare const formatter: LogFormatter;
/**
 * Default JSON formatter for structured logging
 * You should replace this with a formatter based on your required schema
 * Note that `LogRecord` contains `LogData`, which may contain lazy values
 * You must use `utils.evalLogData` or `utils.evalLogDataValue` to evaluate
 * the `LogData`
 */
declare const jsonFormatter: LogFormatter;
export { level, key, keys, date, msg, stack, data, format, formatter, jsonFormatter, };
