"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Unlike `CustomEvent`, the `detail` property can be `undefined`.
 * It will not default to `null`.
 */
class AbstractEvent extends Event {
    detail;
    constructorParams;
    constructor(type = new.target.name, options, constructorParams) {
        if (typeof type === 'string') {
            super(type, options);
            this.detail = options?.detail;
        }
        else {
            super(new.target.name, type);
            this.detail = type.detail;
            constructorParams = options;
        }
        this.constructorParams = constructorParams ?? arguments;
    }
    /**
     * Events cannot be re-dispatched. This was probably to prevent infinite
     * loops. So instead of re-dispatching the same instance, we re-dispatch
     * a clone of the instance.
     */
    clone() {
        try {
            return new this.constructor(...this.constructorParams);
        }
        catch (e) {
            // Normally we would check `instanceof TypeError`
            // However jest appears to choke on that
            if (e.name === 'TypeError') {
                throw new TypeError(`Cloning ${this.constructor.name} requires the original constructor arguments to be passed into super`);
            }
            throw e;
        }
    }
}
exports.default = AbstractEvent;
//# sourceMappingURL=AbstractEvent.js.map