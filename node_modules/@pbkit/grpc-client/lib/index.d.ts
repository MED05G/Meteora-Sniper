import type { RpcClientImpl } from "@pbkit/runtime/rpc";
import * as grpc from "@grpc/grpc-js";
export declare type Metadata = Record<string, string>;
export declare type Header = Metadata;
export declare type Trailer = Metadata & {
    status: Status;
    statusMessage: string;
};
export interface ConfigMetadata {
    [key: string]: string | (() => string | undefined) | (() => Promise<string | undefined>);
}
export interface CreateGrpcClientImplConfig {
    grpcJsClient: grpc.Client;
    metadata?: ConfigMetadata;
}
export declare enum Status {
    OK = "0",
    CANCELLED = "1",
    UNKNOWN = "2",
    INVALID_ARGUMENT = "3",
    DEADLINE_EXCEEDED = "4",
    NOT_FOUND = "5",
    ALREADY_EXISTS = "6",
    PERMISSION_DENIED = "7",
    RESOURCE_EXHAUSTED = "8",
    FAILED_PRECONDITION = "9",
    ABORTED = "10",
    OUT_OF_RANGE = "11",
    UNIMPLEMENTED = "12",
    INTERNAL = "13",
    UNAVAILABLE = "14",
    DATA_LOSS = "15",
    UNAUTHENTICATED = "16"
}
export declare function createGrpcJsClient(host: string, credentials?: grpc.ChannelCredentials): grpc.Client;
export declare function createGrpcClientImpl(config: CreateGrpcClientImplConfig): RpcClientImpl<Metadata, Header, Trailer>;
